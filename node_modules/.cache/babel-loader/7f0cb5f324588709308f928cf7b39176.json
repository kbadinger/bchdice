{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // @ts-ignore\n\nconst pure_cache_1 = __importDefault(require(\"pure-cache\"));\n\nclass RpcCache {\n  constructor() {\n    this.cache = new pure_cache_1.default({\n      expiryCheckInterval: 60 * 1000\n    });\n  }\n\n  getAsset(assetID, data) {\n    if (data) {\n      data.mutable_serialized_data = new Uint8Array(data.mutable_serialized_data);\n      data.immutable_serialized_data = new Uint8Array(data.immutable_serialized_data);\n    }\n\n    return this.access('assets', assetID, data);\n  }\n\n  deleteAsset(assetID) {\n    this.delete('assets', assetID);\n  }\n\n  getTemplate(collectionName, templateID, data) {\n    if (data) {\n      data.immutable_serialized_data = new Uint8Array(data.immutable_serialized_data);\n    }\n\n    return this.access('templates', collectionName + ':' + templateID, data);\n  }\n\n  deleteTemplate(collectionName, templateID) {\n    this.delete('templates', collectionName + ':' + templateID);\n  }\n\n  getSchema(collectionName, schemaName, data) {\n    return this.access('schemas', collectionName + ':' + schemaName, data);\n  }\n\n  deleteSchema(collectionName, schemaName) {\n    this.delete('schemas', collectionName + ':' + schemaName);\n  }\n\n  getCollection(collectionName, data) {\n    return this.access('collections', collectionName, data);\n  }\n\n  deleteCollection(collectionName) {\n    this.delete('collections', collectionName);\n  }\n\n  getOffer(offerID, data) {\n    return this.access('offers', offerID, data);\n  }\n\n  deleteOffer(offerID) {\n    this.delete('offers', offerID);\n  }\n\n  access(namespace, identifier, data) {\n    if (typeof data === 'undefined') {\n      const cache = this.cache.get(namespace + ':' + identifier);\n      return cache === null ? null : cache.value;\n    }\n\n    this.cache.put(namespace + ':' + identifier, data, 15 * 60 * 1000);\n    return data;\n  }\n\n  delete(namespace, identifier) {\n    this.cache.remove(namespace + ':' + identifier);\n  }\n\n}\n\nexports.default = RpcCache;","map":{"version":3,"sources":["/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/atomicassets/build/API/Rpc/Cache.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","pure_cache_1","require","RpcCache","constructor","cache","default","expiryCheckInterval","getAsset","assetID","data","mutable_serialized_data","Uint8Array","immutable_serialized_data","access","deleteAsset","delete","getTemplate","collectionName","templateID","deleteTemplate","getSchema","schemaName","deleteSchema","getCollection","deleteCollection","getOffer","offerID","deleteOffer","namespace","identifier","get","put","remove"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @ts-ignore\nconst pure_cache_1 = __importDefault(require(\"pure-cache\"));\nclass RpcCache {\n    constructor() {\n        this.cache = new pure_cache_1.default({ expiryCheckInterval: 60 * 1000 });\n    }\n    getAsset(assetID, data) {\n        if (data) {\n            data.mutable_serialized_data = new Uint8Array(data.mutable_serialized_data);\n            data.immutable_serialized_data = new Uint8Array(data.immutable_serialized_data);\n        }\n        return this.access('assets', assetID, data);\n    }\n    deleteAsset(assetID) {\n        this.delete('assets', assetID);\n    }\n    getTemplate(collectionName, templateID, data) {\n        if (data) {\n            data.immutable_serialized_data = new Uint8Array(data.immutable_serialized_data);\n        }\n        return this.access('templates', collectionName + ':' + templateID, data);\n    }\n    deleteTemplate(collectionName, templateID) {\n        this.delete('templates', collectionName + ':' + templateID);\n    }\n    getSchema(collectionName, schemaName, data) {\n        return this.access('schemas', collectionName + ':' + schemaName, data);\n    }\n    deleteSchema(collectionName, schemaName) {\n        this.delete('schemas', collectionName + ':' + schemaName);\n    }\n    getCollection(collectionName, data) {\n        return this.access('collections', collectionName, data);\n    }\n    deleteCollection(collectionName) {\n        this.delete('collections', collectionName);\n    }\n    getOffer(offerID, data) {\n        return this.access('offers', offerID, data);\n    }\n    deleteOffer(offerID) {\n        this.delete('offers', offerID);\n    }\n    access(namespace, identifier, data) {\n        if (typeof data === 'undefined') {\n            const cache = this.cache.get(namespace + ':' + identifier);\n            return cache === null ? null : cache.value;\n        }\n        this.cache.put(namespace + ':' + identifier, data, 15 * 60 * 1000);\n        return data;\n    }\n    delete(namespace, identifier) {\n        this.cache.remove(namespace + ':' + identifier);\n    }\n}\nexports.default = RpcCache;\n"]},"metadata":{},"sourceType":"script"}