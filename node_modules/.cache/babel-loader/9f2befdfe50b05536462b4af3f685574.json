{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Generator_1 = require(\"./Generator\");\n/* tslint:disable:variable-name */\n\n\nvar RpcActionGenerator = /*#__PURE__*/function (_Generator_1$ActionGe) {\n  _inherits(RpcActionGenerator, _Generator_1$ActionGe);\n\n  var _super = _createSuper(RpcActionGenerator);\n\n  function RpcActionGenerator(api) {\n    var _this;\n\n    _classCallCheck(this, RpcActionGenerator);\n\n    _this = _super.call(this, api.contract);\n    _this.api = api;\n    return _this;\n  }\n\n  _createClass(RpcActionGenerator, [{\n    key: \"createcol\",\n    value: function () {\n      var _createcol = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authorization, author, collection_name, allow_notify, authorized_accounts, notify_accounts, market_fee, data) {\n        var config;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.api.config();\n\n              case 2:\n                config = _context.sent;\n                return _context.abrupt(\"return\", _get(_getPrototypeOf(RpcActionGenerator.prototype), \"createcol\", this).call(this, authorization, author, collection_name, allow_notify, authorized_accounts, notify_accounts, market_fee, Generator_1.toAttributeMap(data, config.collection_format)));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createcol(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n        return _createcol.apply(this, arguments);\n      }\n\n      return createcol;\n    }()\n  }, {\n    key: \"createtempl\",\n    value: function () {\n      var _createtempl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(authorization, authorized_creator, collection_name, schema_name, transferable, burnable, max_supply, immutable_data) {\n        var schema, immutable_attribute_map;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.api.getSchema(collection_name, schema_name);\n\n              case 2:\n                schema = _context2.sent;\n                _context2.t0 = Generator_1;\n                _context2.t1 = immutable_data;\n                _context2.next = 7;\n                return schema.rawFormat();\n\n              case 7:\n                _context2.t2 = _context2.sent;\n                immutable_attribute_map = _context2.t0.toAttributeMap.call(_context2.t0, _context2.t1, _context2.t2);\n                return _context2.abrupt(\"return\", _get(_getPrototypeOf(RpcActionGenerator.prototype), \"createtempl\", this).call(this, authorization, authorized_creator, collection_name, schema_name, transferable, burnable, max_supply, immutable_attribute_map));\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function createtempl(_x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16) {\n        return _createtempl.apply(this, arguments);\n      }\n\n      return createtempl;\n    }()\n  }, {\n    key: \"mintasset\",\n    value: function () {\n      var _mintasset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(authorization, authorized_minter, collection_name, schema_name, template_id, new_owner, immutable_data, mutable_data, tokens_to_back) {\n        var template, immutable_attribute_map, mutable_attribute_map;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.api.getTemplate(collection_name, template_id);\n\n              case 2:\n                template = _context3.sent;\n                _context3.t0 = Generator_1;\n                _context3.t1 = immutable_data;\n                _context3.next = 7;\n                return template.schema();\n\n              case 7:\n                _context3.next = 9;\n                return _context3.sent.rawFormat();\n\n              case 9:\n                _context3.t2 = _context3.sent;\n                immutable_attribute_map = _context3.t0.toAttributeMap.call(_context3.t0, _context3.t1, _context3.t2);\n                _context3.t3 = Generator_1;\n                _context3.t4 = mutable_data;\n                _context3.next = 15;\n                return template.schema();\n\n              case 15:\n                _context3.next = 17;\n                return _context3.sent.rawFormat();\n\n              case 17:\n                _context3.t5 = _context3.sent;\n                mutable_attribute_map = _context3.t3.toAttributeMap.call(_context3.t3, _context3.t4, _context3.t5);\n                return _context3.abrupt(\"return\", _get(_getPrototypeOf(RpcActionGenerator.prototype), \"mintasset\", this).call(this, authorization, authorized_minter, collection_name, schema_name, template_id, new_owner, immutable_attribute_map, mutable_attribute_map, tokens_to_back));\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function mintasset(_x17, _x18, _x19, _x20, _x21, _x22, _x23, _x24, _x25) {\n        return _mintasset.apply(this, arguments);\n      }\n\n      return mintasset;\n    }()\n  }, {\n    key: \"setassetdata\",\n    value: function () {\n      var _setassetdata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(authorization, authorized_editor, owner, asset_id, mutable_data) {\n        var asset, schema, mutable_attribute_map;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.api.getAsset(owner, asset_id);\n\n              case 2:\n                asset = _context4.sent;\n                _context4.next = 5;\n                return asset.schema();\n\n              case 5:\n                schema = _context4.sent;\n                _context4.t0 = Generator_1;\n                _context4.t1 = mutable_data;\n                _context4.next = 10;\n                return schema.rawFormat();\n\n              case 10:\n                _context4.t2 = _context4.sent;\n                mutable_attribute_map = _context4.t0.toAttributeMap.call(_context4.t0, _context4.t1, _context4.t2);\n                return _context4.abrupt(\"return\", _get(_getPrototypeOf(RpcActionGenerator.prototype), \"setassetdata\", this).call(this, authorization, authorized_editor, owner, asset_id, mutable_attribute_map));\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function setassetdata(_x26, _x27, _x28, _x29, _x30) {\n        return _setassetdata.apply(this, arguments);\n      }\n\n      return setassetdata;\n    }()\n  }, {\n    key: \"setcoldata\",\n    value: function () {\n      var _setcoldata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(authorization, collection_name, data) {\n        var mdata;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.t0 = Generator_1;\n                _context5.t1 = data;\n                _context5.next = 4;\n                return this.api.config();\n\n              case 4:\n                _context5.t2 = _context5.sent.collection_format;\n                mdata = _context5.t0.toAttributeMap.call(_context5.t0, _context5.t1, _context5.t2);\n                return _context5.abrupt(\"return\", _get(_getPrototypeOf(RpcActionGenerator.prototype), \"setcoldata\", this).call(this, authorization, collection_name, mdata));\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function setcoldata(_x31, _x32, _x33) {\n        return _setcoldata.apply(this, arguments);\n      }\n\n      return setcoldata;\n    }()\n  }]);\n\n  return RpcActionGenerator;\n}(Generator_1.ActionGenerator);\n\nexports.default = RpcActionGenerator;","map":{"version":3,"sources":["/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/atomicassets/build/Actions/Rpc.js"],"names":["Object","defineProperty","exports","value","Generator_1","require","RpcActionGenerator","api","contract","authorization","author","collection_name","allow_notify","authorized_accounts","notify_accounts","market_fee","data","config","toAttributeMap","collection_format","authorized_creator","schema_name","transferable","burnable","max_supply","immutable_data","getSchema","schema","rawFormat","immutable_attribute_map","authorized_minter","template_id","new_owner","mutable_data","tokens_to_back","getTemplate","template","mutable_attribute_map","authorized_editor","owner","asset_id","getAsset","asset","mdata","ActionGenerator","default"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Generator_1 = require(\"./Generator\");\n/* tslint:disable:variable-name */\nclass RpcActionGenerator extends Generator_1.ActionGenerator {\n    constructor(api) {\n        super(api.contract);\n        this.api = api;\n    }\n    async createcol(authorization, author, collection_name, allow_notify, authorized_accounts, notify_accounts, market_fee, data) {\n        const config = await this.api.config();\n        return super.createcol(authorization, author, collection_name, allow_notify, authorized_accounts, notify_accounts, market_fee, Generator_1.toAttributeMap(data, config.collection_format));\n    }\n    async createtempl(authorization, authorized_creator, collection_name, schema_name, transferable, burnable, max_supply, immutable_data) {\n        const schema = await this.api.getSchema(collection_name, schema_name);\n        const immutable_attribute_map = Generator_1.toAttributeMap(immutable_data, await schema.rawFormat());\n        return super.createtempl(authorization, authorized_creator, collection_name, schema_name, transferable, burnable, max_supply, immutable_attribute_map);\n    }\n    async mintasset(authorization, authorized_minter, collection_name, schema_name, template_id, new_owner, immutable_data, mutable_data, tokens_to_back) {\n        const template = await this.api.getTemplate(collection_name, template_id);\n        const immutable_attribute_map = Generator_1.toAttributeMap(immutable_data, await (await template.schema()).rawFormat());\n        const mutable_attribute_map = Generator_1.toAttributeMap(mutable_data, await (await template.schema()).rawFormat());\n        return super.mintasset(authorization, authorized_minter, collection_name, schema_name, template_id, new_owner, immutable_attribute_map, mutable_attribute_map, tokens_to_back);\n    }\n    async setassetdata(authorization, authorized_editor, owner, asset_id, mutable_data) {\n        const asset = await this.api.getAsset(owner, asset_id);\n        const schema = await asset.schema();\n        const mutable_attribute_map = Generator_1.toAttributeMap(mutable_data, await schema.rawFormat());\n        return super.setassetdata(authorization, authorized_editor, owner, asset_id, mutable_attribute_map);\n    }\n    async setcoldata(authorization, collection_name, data) {\n        const mdata = Generator_1.toAttributeMap(data, (await this.api.config()).collection_format);\n        return super.setcoldata(authorization, collection_name, mdata);\n    }\n}\nexports.default = RpcActionGenerator;\n"]},"metadata":{},"sourceType":"script"}