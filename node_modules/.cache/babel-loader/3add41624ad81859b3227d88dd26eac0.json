{"ast":null,"code":"var _jsxFileName = \"/Users/kevinbadinger/eos/reactdemo/WCWReact/src/components/droplist.jsx\";\nimport { JsonRpc } from \"eosjs\";\nimport { deserialize, ObjectSchema } from \"atomicassets\";\nimport React, { StrictMode, useEffect, useState } from \"react\";\nimport { Button, Card, CardMedia, CardHeader, Typography, CardContent, Grid } from \"@material-ui/core\";\nimport Form from \"react-bootstrap/Form\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./droplist.css\";\nimport { makeStyles } from \"@material-ui/styles\";\nconst defaultState = {\n  activeUser: null,\n  accountName: \"\",\n  dropItems: \"\",\n  drops: [],\n  statusDisplay: \"\"\n};\nvar ourNetwork = {\n  chainId: \"1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4\",\n  rpcEndpoints: [{\n    protocol: \"https\",\n    host: \"chain.wax.io\",\n    port: \"\"\n  }]\n};\nconst picture = {\n  height: \"250px\",\n  width: \"150px\"\n};\nconst cardstyleGreen = {\n  border: 10,\n  borderColor: \"green\",\n  borderStyle: \"solid\"\n};\nconst cardstyleRed = {\n  border: 10,\n  borderColor: \"red\",\n  borderStyle: \"solid\"\n};\nconst WaxUsd = 0.13;\n\nclass DropListApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLogoutBtn = () => {};\n\n    this.handleDropUpdate = event => {\n      let etv = event.target.value;\n      this.setState(state => ({ ...this.state,\n        dropItems: etv\n      }));\n    };\n\n    this.searchDrop = async event => {\n      var lb = \"0\";\n      var newAsset = \"1\";\n\n      while (lb != newAsset) {\n        newAsset = lb;\n        let resp = await this.searchAssets(lb);\n\n        for (let itemNdx in resp.rows) {\n          {\n            lb = resp.rows[itemNdx].asset_id;\n            const searchIndex = this.state.drops.findIndex(d => d.template_id == resp.rows[itemNdx].template_id);\n\n            if (searchIndex >= 0) {\n              let itm = this.state.drops[searchIndex];\n              itm.numberHad++;\n              this.state.drops[searchIndex] = itm;\n              this.setState(state => ({ ...this.state,\n                drops: this.state.drops\n              }));\n            }\n          }\n        }\n      }\n    };\n\n    this.renderDropForm = () => {\n      const {\n        dropItems\n      } = this.state;\n      const part = this.partition;\n      const rpc = this.state.rpc;\n      const bd = this.buyDrop;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          width: \"25%\",\n          marginTop: \"40px\",\n          marginBottom: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"dropItems\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }\n      }, \"Wallet:\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"150%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"300px\",\n          float: \"left\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"dropItems\",\n        value: dropItems,\n        onChange: this.handleDropUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: \"305px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.searchDrop,\n        variant: \"contained\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 17\n        }\n      }, \"Search\")))), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle2\",\n        component: \"h2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }\n      }, this.state.statusDisplay)), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginLeft: \"-250px\",\n          paddingBottom: \"50px\",\n          paddingTop: \"25px\",\n          width: \"900px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }\n      }, \"BCH Draco Dice (\", this.state.ctr, \")\"), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }\n      }, this.state.drops.map(function (item, i) {\n        var _item$collection_name, _item$drop_id;\n\n        var desc = item.name;\n        var have = item.numberHad;\n        var d1 = new Date(item.start_time * 1000);\n        let img = \"\";\n\n        if (item.imgTag != null && item.imgTag.length > 0) {\n          img = /*#__PURE__*/React.createElement(\"img\", {\n            style: picture,\n            src: item.imgTag,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 23\n            }\n          });\n        }\n\n        return /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          key: item.drop_id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          style: have > 0 ? cardstyleGreen : cardstyleRed,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          title: (_item$collection_name = item.collection_name) !== null && _item$collection_name !== void 0 ? _item$collection_name : \"\",\n          subheader: (_item$drop_id = item.drop_id) !== null && _item$drop_id !== void 0 ? _item$drop_id : \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(CardContent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 21\n          }\n        }, img, /*#__PURE__*/React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 23\n          }\n        }, desc, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 31\n          }\n        }), \"Number of Assets: \", have))));\n      }))));\n    };\n\n    this.state = { ...defaultState,\n      rows: [],\n      drops: [],\n      ctr: 0,\n      rpc: new JsonRpc(`${ourNetwork.rpcEndpoints[0].protocol}://${ourNetwork.rpcEndpoints[0].host}`)\n    };\n    this.renderModalButton = this.renderModalButton.bind(this);\n    this.handleDropUpdate = this.handleDropUpdate.bind(this);\n    this.searchDrop = this.searchDrop.bind(this);\n    this.renderDropForm = this.renderDropForm.bind(this);\n    this.buyDrop = this.buyDrop.bind(this);\n    this.buyClaimContract = this.buyClaimContract.bind(this);\n\n    this.partition = (str, n) => {\n      var aa = [];\n      var i, l;\n\n      for (i = 0, l = str.length; i < l; i += n) {\n        aa.push(str.substr(i, n));\n      }\n\n      return aa;\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"run\");\n    this._asyncRequest = this.state.rpc.get_table_rows({\n      json: true,\n      code: \"atomicassets\",\n      scope: \"dracodice\",\n      table: \"templates\",\n      lower_bound: \"356879\",\n      limit: 1000,\n      reverse: false,\n      show_payer: false\n    }).then(resp => {\n      this._asyncRequest = null;\n      var ctr = 0;\n\n      for (let itemNdx in resp.rows) {\n        let item = resp.rows[itemNdx];\n\n        if (item.schema_name == \"bcheroes1\") {\n          ctr++;\n          let os = ObjectSchema([{\n            name: \"name\",\n            type: \"string\"\n          }, {\n            name: \"img\",\n            type: \"image\"\n          }, {\n            name: \"series\",\n            type: \"string\"\n          }, {\n            name: \"rarity\",\n            type: \"string\"\n          }, {\n            name: \"material\",\n            type: \"string\"\n          }, {\n            name: \"style\",\n            type: \"string\"\n          }, {\n            name: \"face values\",\n            type: \"string\"\n          }, {\n            name: \"gameimg\",\n            type: \"image\"\n          }, {\n            name: \"video\",\n            type: \"string\"\n          }, {\n            name: \"shape\",\n            type: \"string\"\n          }]);\n          let deserializedData = deserialize(item.immutable_serialized_data, os);\n          item.name = deserializedData.name;\n          item.numberHad = 0; // console.log(item);\n\n          item.imgTag = \"https://ipfs.io/ipfs/\" + deserializedData.img;\n          this.state.drops.push(item);\n        }\n      }\n\n      this.setState(state => ({ ...this.state,\n        ctr: ctr,\n        drops: this.state.drops\n      }));\n    });\n  }\n\n  componentWillUnmount() {\n    if (this._asyncRequest) {\n      this._asyncRequest.cancel();\n    }\n  }\n\n  async buyDrop(buyId, pri) {\n    this.buyClaimContract(buyId, pri);\n  }\n\n  componentDidUpdate() {\n    const {//  ual: { activeUser },\n    } = this.props; //    this.setState(defaultState);\n  }\n\n  renderModalButton() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ual-btn-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 12\n      }\n    });\n  }\n\n  async searchAssets(startingAsset) {\n    let resp = await this.state.rpc.get_table_rows({\n      json: true,\n      code: \"atomicassets\",\n      scope: this.state.dropItems,\n      table: \"assets\",\n      lower_bound: startingAsset,\n      limit: 1000,\n      reverse: false,\n      show_payer: false\n    });\n    return resp;\n  }\n\n  async buyClaimContract(buyId, pri) {\n    const {\n      accountName,\n      activeUser\n    } = this.state;\n\n    const roundOne = (n, d) => Math.round(n * Math.pow(10, d)) / Math.pow(10, d);\n\n    var buyString = pri;\n    var delphi = 0;\n\n    if (buyString.includes(\"USD\")) {\n      //For drops that are USD, need to convert the USD price to WAXP.  Using the estimated hard coded exchange rate from WaxUsd.  Will fail if this is not close enough.\n      var priAmt = buyString.split(\" \")[0];\n      var waxP = priAmt / WaxUsd;\n      var waxP = waxP + 0.5;\n      var waxP = roundOne(waxP, 8);\n      var s = waxP.toString();\n      if (s.indexOf(\".\") == -1) s += \".\";\n\n      while (s.length < s.indexOf(\".\") + 9) s += \"0\";\n\n      waxP = s;\n      waxP = waxP + \" WAX\";\n      delphi = WaxUsd;\n    }\n\n    const orderTransaction = {\n      actions: [{\n        account: \"eosio.token\",\n        name: \"transfer\",\n        authorization: [{\n          actor: accountName,\n          permission: activeUser.requestPermission\n        }],\n        data: {\n          from: accountName,\n          to: \"atomicdropsx\",\n          quantity: buyString,\n          memo: \"deposit\"\n        }\n      }]\n    };\n\n    try {\n      const account = await this.state.rpc.get_account(accountName);\n      await activeUser.signTransaction(orderTransaction, {\n        blocksBehind: 3,\n        expireSeconds: 15\n      });\n      const claimTransaction = {\n        actions: [{\n          account: \"atomicdropsx\",\n          name: \"claimdrop\",\n          authorization: [{\n            actor: accountName,\n            permission: activeUser.requestPermission\n          }],\n          data: {\n            claimer: accountName,\n            drop_id: buyId,\n            claim_amount: 1,\n            intended_delphi_median: delphi,\n            referrer: \"atomicdrop\",\n            country: \"US\"\n          }\n        }]\n      };\n      await activeUser.signTransaction(claimTransaction, {\n        blocksBehind: 3,\n        expireSeconds: 15\n      });\n    } catch (error) {\n      console.warn(error);\n    }\n  }\n\n  render() {\n    let modalButton = this.renderModalButton();\n    let loggedIn = \"\";\n    let logoutButton = null; // Once UAL wrapper is implemented, uncomment below lines\n\n    const {\n      accountName\n    } = this.state;\n    modalButton = false;\n    logoutButton = this.renderLogoutBtn();\n    loggedIn = accountName ? `Logged in as ${accountName}` : \"\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        paddingTop: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }\n    }, \"Draco Dice BCH Status\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }\n    }), modalButton, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"ual-subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }\n    }, loggedIn), this.renderDropForm(), logoutButton);\n  }\n\n}\n\nDropListApp.displayName = \"BCH Draco collection\";\nexport default DropListApp;","map":{"version":3,"sources":["/Users/kevinbadinger/eos/reactdemo/WCWReact/src/components/droplist.jsx"],"names":["JsonRpc","deserialize","ObjectSchema","React","StrictMode","useEffect","useState","Button","Card","CardMedia","CardHeader","Typography","CardContent","Grid","Form","makeStyles","defaultState","activeUser","accountName","dropItems","drops","statusDisplay","ourNetwork","chainId","rpcEndpoints","protocol","host","port","picture","height","width","cardstyleGreen","border","borderColor","borderStyle","cardstyleRed","WaxUsd","DropListApp","Component","constructor","props","renderLogoutBtn","handleDropUpdate","event","etv","target","value","setState","state","searchDrop","lb","newAsset","resp","searchAssets","itemNdx","rows","asset_id","searchIndex","findIndex","d","template_id","itm","numberHad","renderDropForm","part","partition","rpc","bd","buyDrop","marginLeft","marginRight","marginTop","marginBottom","float","textAlign","paddingBottom","paddingTop","ctr","map","item","i","desc","name","have","d1","Date","start_time","img","imgTag","length","drop_id","collection_name","renderModalButton","bind","buyClaimContract","str","n","aa","l","push","substr","componentDidMount","console","log","_asyncRequest","get_table_rows","json","code","scope","table","lower_bound","limit","reverse","show_payer","then","schema_name","os","type","deserializedData","immutable_serialized_data","componentWillUnmount","cancel","buyId","pri","componentDidUpdate","startingAsset","roundOne","Math","round","pow","buyString","delphi","includes","priAmt","split","waxP","s","toString","indexOf","orderTransaction","actions","account","authorization","actor","permission","requestPermission","data","from","to","quantity","memo","get_account","signTransaction","blocksBehind","expireSeconds","claimTransaction","claimer","claim_amount","intended_delphi_median","referrer","country","error","warn","render","modalButton","loggedIn","logoutButton","displayName"],"mappings":"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","sourcesContent":["import { JsonRpc } from \"eosjs\";\nimport { deserialize, ObjectSchema } from \"atomicassets\";\nimport React, { StrictMode, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  CardMedia,\n  CardHeader,\n  Typography,\n  CardContent,\n  Grid,\n} from \"@material-ui/core\";\nimport Form from \"react-bootstrap/Form\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./droplist.css\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst defaultState = {\n  activeUser: null,\n  accountName: \"\",\n  dropItems: \"\",\n  drops: [],\n  statusDisplay: \"\",\n};\n\nvar ourNetwork = {\n  chainId: \"1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4\",\n  rpcEndpoints: [{ protocol: \"https\", host: \"chain.wax.io\", port: \"\" }],\n};\n\nconst picture = {\n  height: \"250px\",\n  width: \"150px\",\n};\n\nconst cardstyleGreen = {\n  border: 10,\n  borderColor: \"green\",\n  borderStyle: \"solid\",\n};\n\nconst cardstyleRed = {\n  border: 10,\n  borderColor: \"red\",\n  borderStyle: \"solid\",\n};\n\n\nconst WaxUsd = 0.13;\n\nclass DropListApp extends React.Component {\n  static displayName = \"BCH Draco collection\";\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...defaultState,\n      rows: [],\n      drops: [],\n      ctr: 0,\n      rpc: new JsonRpc(\n        `${ourNetwork.rpcEndpoints[0].protocol}://${ourNetwork.rpcEndpoints[0].host}`\n      ),\n    };\n\n    this.renderModalButton = this.renderModalButton.bind(this);\n    this.handleDropUpdate = this.handleDropUpdate.bind(this);\n    this.searchDrop = this.searchDrop.bind(this);\n\n    this.renderDropForm = this.renderDropForm.bind(this);\n    this.buyDrop = this.buyDrop.bind(this);\n    this.buyClaimContract = this.buyClaimContract.bind(this);\n\n    this.partition = (str, n) => {\n      var aa = [];\n      var i, l;\n      for (i = 0, l = str.length; i < l; i += n) {\n        aa.push(str.substr(i, n));\n      }\n      return aa;\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"run\");\n\n    this._asyncRequest = this.state.rpc\n      .get_table_rows({\n        json: true,\n        code: \"atomicassets\",\n        scope: \"dracodice\",\n        table: \"templates\",\n        lower_bound: \"356879\",\n        limit: 1000,\n        reverse: false,\n        show_payer: false,\n      })\n      .then((resp) => {\n        this._asyncRequest = null;\n\n        var ctr = 0;\n\n        for (let itemNdx in resp.rows) {\n          let item = resp.rows[itemNdx];\n\n          if (item.schema_name == \"bcheroes1\") {\n            ctr++;\n\n            let os = ObjectSchema([\n              { name: \"name\", type: \"string\" },\n              { name: \"img\", type: \"image\" },\n              { name: \"series\", type: \"string\" },\n              { name: \"rarity\", type: \"string\" },\n              { name: \"material\", type: \"string\" },\n              { name: \"style\", type: \"string\" },\n              { name: \"face values\", type: \"string\" },\n              { name: \"gameimg\", type: \"image\" },\n              { name: \"video\", type: \"string\" },\n              { name: \"shape\", type: \"string\" },\n            ]);\n            let deserializedData = deserialize(\n              item.immutable_serialized_data,\n              os\n            );\n\n            item.name = deserializedData.name;\n            item.numberHad = 0;\n\n            // console.log(item);\n\n            item.imgTag = \"https://ipfs.io/ipfs/\" + deserializedData.img;\n\n            this.state.drops.push(item);\n          }\n        }\n\n        this.setState((state) => ({\n          ...this.state,\n          ctr: ctr,\n          drops: this.state.drops,\n        }));\n      });\n  }\n\n  componentWillUnmount() {\n    if (this._asyncRequest) {\n      this._asyncRequest.cancel();\n    }\n  }\n\n  async buyDrop(buyId, pri) {\n    this.buyClaimContract(buyId, pri);\n  }\n\n  componentDidUpdate() {\n    const {\n      //  ual: { activeUser },\n    } = this.props;\n\n    //    this.setState(defaultState);\n  }\n\n  renderLogoutBtn = () => {};\n\n  renderModalButton() {\n    return <p className=\"ual-btn-wrapper\"></p>;\n  }\n\n  handleDropUpdate = (event) => {\n    let etv = event.target.value;\n\n    this.setState((state) => ({\n      ...this.state,\n      dropItems: etv,\n    }));\n  };\n\n  searchDrop = async (event) => {\n    var lb = \"0\";\n\n    var newAsset = \"1\";\n\n    while (lb != newAsset)\n    {\n\n    newAsset = lb;\n\n    let resp = await this.searchAssets(lb);\n\n    for (let itemNdx in resp.rows) {\n      {\n        lb = resp.rows[itemNdx].asset_id;\n\n        const searchIndex = this.state.drops.findIndex(\n          (d) => d.template_id == resp.rows[itemNdx].template_id\n        );\n\n        if (searchIndex >= 0) {\n         \n         let itm = this.state.drops[searchIndex];\n         itm.numberHad++;\n\n          this.state.drops[searchIndex] = itm;\n\n         this.setState((state) => ({...this.state, drops: this.state.drops}))\n         \n        }\n      }\n    }\n\n    \n  }\n  };\n\n  async searchAssets(startingAsset) {\n    let resp = await this.state.rpc.get_table_rows({\n      json: true,\n      code: \"atomicassets\",\n      scope: this.state.dropItems,\n      table: \"assets\",\n      lower_bound: startingAsset,\n      limit: 1000,\n      reverse: false,\n      show_payer: false,\n    });\n\n    return resp;\n  }\n\n  async buyClaimContract(buyId, pri) {\n    const { accountName, activeUser } = this.state;\n\n    const roundOne = (n, d) =>\n      Math.round(n * Math.pow(10, d)) / Math.pow(10, d);\n\n    var buyString = pri;\n\n    var delphi = 0;\n\n    if (buyString.includes(\"USD\")) {\n      //For drops that are USD, need to convert the USD price to WAXP.  Using the estimated hard coded exchange rate from WaxUsd.  Will fail if this is not close enough.\n\n      var priAmt = buyString.split(\" \")[0];\n\n      var waxP = priAmt / WaxUsd;\n\n      var waxP = waxP + 0.5;\n\n      var waxP = roundOne(waxP, 8);\n\n      var s = waxP.toString();\n      if (s.indexOf(\".\") == -1) s += \".\";\n\n      while (s.length < s.indexOf(\".\") + 9) s += \"0\";\n\n      waxP = s;\n\n      waxP = waxP + \" WAX\";\n\n      delphi = WaxUsd;\n    }\n\n    const orderTransaction = {\n      actions: [\n        {\n          account: \"eosio.token\",\n          name: \"transfer\",\n          authorization: [\n            {\n              actor: accountName,\n              permission: activeUser.requestPermission,\n            },\n          ],\n          data: {\n            from: accountName,\n            to: \"atomicdropsx\",\n            quantity: buyString,\n            memo: \"deposit\",\n          },\n        },\n      ],\n    };\n\n    try {\n      const account = await this.state.rpc.get_account(accountName);\n\n      await activeUser.signTransaction(orderTransaction, {\n        blocksBehind: 3,\n        expireSeconds: 15,\n      });\n\n      const claimTransaction = {\n        actions: [\n          {\n            account: \"atomicdropsx\",\n            name: \"claimdrop\",\n            authorization: [\n              {\n                actor: accountName,\n                permission: activeUser.requestPermission,\n              },\n            ],\n            data: {\n              claimer: accountName,\n              drop_id: buyId,\n              claim_amount: 1,\n              intended_delphi_median: delphi,\n              referrer: \"atomicdrop\",\n              country: \"US\",\n            },\n          },\n        ],\n      };\n\n      await activeUser.signTransaction(claimTransaction, {\n        blocksBehind: 3,\n        expireSeconds: 15,\n      });\n    } catch (error) {\n      console.warn(error);\n    }\n  }\n\n  renderDropForm = () => {\n    const { dropItems } = this.state;\n\n    const part = this.partition;\n\n    const rpc = this.state.rpc;\n\n    const bd = this.buyDrop;\n\n    return (\n      <div\n        style={{\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          width: \"25%\",\n          marginTop: \"40px\",\n          marginBottom: \"10px\",\n        }}\n      >\n        <Form>\n          <Form.Group controlId=\"dropItems\">\n            <Form.Label>Wallet:</Form.Label>\n\n            <div style={{ width: \"150%\" }}>\n              <div style={{ width: \"300px\", float: \"left\" }}>\n                <Form.Control\n                  type=\"text\"\n                  name=\"dropItems\"\n                  value={dropItems}\n                  onChange={this.handleDropUpdate}\n                />\n              </div>\n              <div style={{ marginLeft: \"305px\" }}>\n                <Button onClick={this.searchDrop} variant=\"contained\">\n                  Search\n                </Button>\n              </div>\n            </div>\n          </Form.Group>\n\n          <Typography variant=\"subtitle2\" component=\"h2\">\n            {this.state.statusDisplay}\n          </Typography>\n        </Form>\n\n        <div\n          style={{\n            textAlign: \"center\",\n            marginLeft: \"-250px\",\n            paddingBottom: \"50px\",\n            paddingTop: \"25px\",\n            width: \"900px\",\n          }}\n        >\n          <h3>BCH Draco Dice ({this.state.ctr})</h3>\n          <Grid container spacing={4}>\n            {this.state.drops.map(function (item, i) {\n              var desc = item.name;\n\n              var have = item.numberHad;\n\n              var d1 = new Date(item.start_time * 1000);\n\n              let img = \"\";\n\n              if (item.imgTag != null && item.imgTag.length > 0) {\n                img = <img style={picture} src={item.imgTag} />;\n              }\n\n              return (\n                <Grid item xs={12} sm={6} md={4} key={item.drop_id}>\n                  <Card style={have > 0 ? cardstyleGreen : cardstyleRed}>\n                    <CardHeader\n                      title={item.collection_name ?? \"\"}\n                      subheader={item.drop_id ?? \"\"}\n                    />\n                    <CardContent>\n                      {img}\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                      >\n                        {desc}<br/>Number of Assets: {have}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    let modalButton = this.renderModalButton();\n    let loggedIn = \"\";\n    let logoutButton = null;\n\n    // Once UAL wrapper is implemented, uncomment below lines\n\n    const { accountName } = this.state;\n    modalButton = false;\n    logoutButton = this.renderLogoutBtn();\n    loggedIn = accountName ? `Logged in as ${accountName}` : \"\";\n\n    return (\n      <div style={{ textAlign: \"center\", paddingTop: \"50px\" }}>\n        <h2>Draco Dice BCH Status</h2>\n        <div style={{ marginBottom: \"20px\" }}></div>\n        {modalButton}\n        <h3 className=\"ual-subtitle\">{loggedIn}</h3>\n        {this.renderDropForm()}\n        {logoutButton}\n      </div>\n    );\n  }\n}\n\nexport default DropListApp;\n"]},"metadata":{},"sourceType":"module"}