{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar big_integer_1 = __importDefault(require(\"big-integer\"));\n\nvar DeserializationError_1 = __importDefault(require(\"../../Errors/DeserializationError\"));\n\nvar SerializationError_1 = __importDefault(require(\"../../Errors/SerializationError\"));\n\nvar Binary_1 = require(\"../Binary\");\n\nvar VariableIntegerParser = /*#__PURE__*/function () {\n  function VariableIntegerParser(size, unsigned) {\n    _classCallCheck(this, VariableIntegerParser);\n\n    this.size = size;\n    this.unsigned = unsigned;\n  }\n\n  _createClass(VariableIntegerParser, [{\n    key: \"deserialize\",\n    value: function deserialize(state) {\n      var n = Binary_1.varint_decode(state);\n\n      if (!this.unsigned) {\n        n = Binary_1.zigzag_decode(n);\n      }\n\n      if (n.greaterOrEquals(big_integer_1.default(2).pow(this.size * 8 - (this.unsigned ? 0 : 1)))) {\n        throw new DeserializationError_1.default('number \\'' + n.toString() + '\\' too large for given type');\n      }\n\n      if (this.size <= 6) {\n        return n.toJSNumber();\n      }\n\n      return n.toString();\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      var n = big_integer_1.default(data);\n\n      if (n.greaterOrEquals(big_integer_1.default(2).pow(this.size * 8 - (this.unsigned ? 0 : 1)))) {\n        throw new SerializationError_1.default('number \\'' + n.toString() + '\\' too large for given type');\n      }\n\n      if (!this.unsigned) {\n        n = Binary_1.zigzag_encode(n);\n      }\n\n      return Binary_1.varint_encode(n);\n    }\n  }]);\n\n  return VariableIntegerParser;\n}();\n\nexports.default = VariableIntegerParser;","map":{"version":3,"sources":["/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/atomicassets/build/Serialization/TypeParser/VariableIntegerParser.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","big_integer_1","require","DeserializationError_1","SerializationError_1","Binary_1","VariableIntegerParser","size","unsigned","state","n","varint_decode","zigzag_decode","greaterOrEquals","default","pow","toString","toJSNumber","data","zigzag_encode","varint_encode"],"mappings":"AAAA;;;;;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,aAAa,GAAGP,eAAe,CAACQ,OAAO,CAAC,aAAD,CAAR,CAArC;;AACA,IAAMC,sBAAsB,GAAGT,eAAe,CAACQ,OAAO,CAAC,mCAAD,CAAR,CAA9C;;AACA,IAAME,oBAAoB,GAAGV,eAAe,CAACQ,OAAO,CAAC,iCAAD,CAAR,CAA5C;;AACA,IAAMG,QAAQ,GAAGH,OAAO,CAAC,WAAD,CAAxB;;IACMI,qB;AACF,iCAAYC,IAAZ,EAAkBC,QAAlB,EAA4B;AAAA;;AACxB,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;;;;WACD,qBAAYC,KAAZ,EAAmB;AACf,UAAIC,CAAC,GAAGL,QAAQ,CAACM,aAAT,CAAuBF,KAAvB,CAAR;;AACA,UAAI,CAAC,KAAKD,QAAV,EAAoB;AAChBE,QAAAA,CAAC,GAAGL,QAAQ,CAACO,aAAT,CAAuBF,CAAvB,CAAJ;AACH;;AACD,UAAIA,CAAC,CAACG,eAAF,CAAkBZ,aAAa,CAACa,OAAd,CAAsB,CAAtB,EAAyBC,GAAzB,CAA6B,KAAKR,IAAL,GAAY,CAAZ,IAAiB,KAAKC,QAAL,GAAgB,CAAhB,GAAoB,CAArC,CAA7B,CAAlB,CAAJ,EAA8F;AAC1F,cAAM,IAAIL,sBAAsB,CAACW,OAA3B,CAAmC,cAAcJ,CAAC,CAACM,QAAF,EAAd,GAA6B,6BAAhE,CAAN;AACH;;AACD,UAAI,KAAKT,IAAL,IAAa,CAAjB,EAAoB;AAChB,eAAOG,CAAC,CAACO,UAAF,EAAP;AACH;;AACD,aAAOP,CAAC,CAACM,QAAF,EAAP;AACH;;;WACD,mBAAUE,IAAV,EAAgB;AACZ,UAAIR,CAAC,GAAGT,aAAa,CAACa,OAAd,CAAsBI,IAAtB,CAAR;;AACA,UAAIR,CAAC,CAACG,eAAF,CAAkBZ,aAAa,CAACa,OAAd,CAAsB,CAAtB,EAAyBC,GAAzB,CAA6B,KAAKR,IAAL,GAAY,CAAZ,IAAiB,KAAKC,QAAL,GAAgB,CAAhB,GAAoB,CAArC,CAA7B,CAAlB,CAAJ,EAA8F;AAC1F,cAAM,IAAIJ,oBAAoB,CAACU,OAAzB,CAAiC,cAAcJ,CAAC,CAACM,QAAF,EAAd,GAA6B,6BAA9D,CAAN;AACH;;AACD,UAAI,CAAC,KAAKR,QAAV,EAAoB;AAChBE,QAAAA,CAAC,GAAGL,QAAQ,CAACc,aAAT,CAAuBT,CAAvB,CAAJ;AACH;;AACD,aAAOL,QAAQ,CAACe,aAAT,CAAuBV,CAAvB,CAAP;AACH;;;;;;AAELX,OAAO,CAACe,OAAR,GAAkBR,qBAAlB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst big_integer_1 = __importDefault(require(\"big-integer\"));\nconst DeserializationError_1 = __importDefault(require(\"../../Errors/DeserializationError\"));\nconst SerializationError_1 = __importDefault(require(\"../../Errors/SerializationError\"));\nconst Binary_1 = require(\"../Binary\");\nclass VariableIntegerParser {\n    constructor(size, unsigned) {\n        this.size = size;\n        this.unsigned = unsigned;\n    }\n    deserialize(state) {\n        let n = Binary_1.varint_decode(state);\n        if (!this.unsigned) {\n            n = Binary_1.zigzag_decode(n);\n        }\n        if (n.greaterOrEquals(big_integer_1.default(2).pow(this.size * 8 - (this.unsigned ? 0 : 1)))) {\n            throw new DeserializationError_1.default('number \\'' + n.toString() + '\\' too large for given type');\n        }\n        if (this.size <= 6) {\n            return n.toJSNumber();\n        }\n        return n.toString();\n    }\n    serialize(data) {\n        let n = big_integer_1.default(data);\n        if (n.greaterOrEquals(big_integer_1.default(2).pow(this.size * 8 - (this.unsigned ? 0 : 1)))) {\n            throw new SerializationError_1.default('number \\'' + n.toString() + '\\' too large for given type');\n        }\n        if (!this.unsigned) {\n            n = Binary_1.zigzag_encode(n);\n        }\n        return Binary_1.varint_encode(n);\n    }\n}\nexports.default = VariableIntegerParser;\n"]},"metadata":{},"sourceType":"script"}