{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst VariableParser_1 = __importDefault(require(\"./VariableParser\"));\n\nclass StringParser extends VariableParser_1.default {\n  deserialize(state) {\n    return new TextDecoder().decode(super.deserialize(state));\n  }\n\n  serialize(data) {\n    return super.serialize(new TextEncoder().encode(data));\n  }\n\n}\n\nexports.default = StringParser;","map":{"version":3,"sources":["/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/atomicassets/build/Serialization/TypeParser/StringParser.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","VariableParser_1","require","StringParser","default","deserialize","state","TextDecoder","decode","serialize","data","TextEncoder","encode"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,gBAAgB,GAAGP,eAAe,CAACQ,OAAO,CAAC,kBAAD,CAAR,CAAxC;;AACA,MAAMC,YAAN,SAA2BF,gBAAgB,CAACG,OAA5C,CAAoD;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,WAAO,IAAIC,WAAJ,GAAkBC,MAAlB,CAAyB,MAAMH,WAAN,CAAkBC,KAAlB,CAAzB,CAAP;AACH;;AACDG,EAAAA,SAAS,CAACC,IAAD,EAAO;AACZ,WAAO,MAAMD,SAAN,CAAgB,IAAIE,WAAJ,GAAkBC,MAAlB,CAAyBF,IAAzB,CAAhB,CAAP;AACH;;AAN+C;;AAQpDX,OAAO,CAACK,OAAR,GAAkBD,YAAlB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst VariableParser_1 = __importDefault(require(\"./VariableParser\"));\nclass StringParser extends VariableParser_1.default {\n    deserialize(state) {\n        return new TextDecoder().decode(super.deserialize(state));\n    }\n    serialize(data) {\n        return super.serialize(new TextEncoder().encode(data));\n    }\n}\nexports.default = StringParser;\n"]},"metadata":{},"sourceType":"script"}