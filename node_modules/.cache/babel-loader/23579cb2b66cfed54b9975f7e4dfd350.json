{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar RpcQueue = /*#__PURE__*/function () {\n  function RpcQueue(api) {\n    var requestLimit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n\n    _classCallCheck(this, RpcQueue);\n\n    this.api = api;\n    this.requestLimit = requestLimit;\n    this.elements = [];\n    this.interval = null;\n    this.preloadedCollections = {};\n  }\n\n  _createClass(RpcQueue, [{\n    key: \"fetchAsset\",\n    value: function () {\n      var _fetchAsset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(owner, assetID) {\n        var _this = this;\n\n        var useCache,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                useCache = _args.length > 2 && _args[2] !== undefined ? _args[2] : true;\n                _context.next = 3;\n                return this.fetch_single_row('assets', owner, assetID, function (data) {\n                  return useCache || typeof data !== 'undefined' ? _this.api.cache.getAsset(assetID, data) : null;\n                });\n\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchAsset(_x, _x2) {\n        return _fetchAsset.apply(this, arguments);\n      }\n\n      return fetchAsset;\n    }()\n  }, {\n    key: \"fetchAccountAssets\",\n    value: function () {\n      var _fetchAccountAssets = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(account) {\n        var _this2 = this;\n\n        var rows;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.fetch_all_rows('assets', account, 'asset_id');\n\n              case 2:\n                rows = _context2.sent;\n                return _context2.abrupt(\"return\", rows.map(function (asset) {\n                  return _this2.api.cache.getAsset(asset.asset_id, asset);\n                }));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function fetchAccountAssets(_x3) {\n        return _fetchAccountAssets.apply(this, arguments);\n      }\n\n      return fetchAccountAssets;\n    }()\n  }, {\n    key: \"fetchTemplate\",\n    value: function () {\n      var _fetchTemplate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(collectionName, templateID) {\n        var _this3 = this;\n\n        var useCache,\n            _args3 = arguments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                useCache = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : true;\n                _context3.next = 3;\n                return this.fetch_single_row('templates', collectionName, templateID, function (data) {\n                  return useCache || typeof data !== 'undefined' ? _this3.api.cache.getTemplate(collectionName, templateID, data) : null;\n                });\n\n              case 3:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function fetchTemplate(_x4, _x5) {\n        return _fetchTemplate.apply(this, arguments);\n      }\n\n      return fetchTemplate;\n    }()\n  }, {\n    key: \"fetchSchema\",\n    value: function () {\n      var _fetchSchema = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(collectionName, schemaName) {\n        var _this4 = this;\n\n        var useCache,\n            _args4 = arguments;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                useCache = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : true;\n                _context4.next = 3;\n                return this.fetch_single_row('schemas', collectionName, schemaName, function (data) {\n                  return useCache || typeof data !== 'undefined' ? _this4.api.cache.getSchema(collectionName, schemaName, data) : null;\n                });\n\n              case 3:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function fetchSchema(_x6, _x7) {\n        return _fetchSchema.apply(this, arguments);\n      }\n\n      return fetchSchema;\n    }()\n  }, {\n    key: \"fetchCollection\",\n    value: function () {\n      var _fetchCollection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(collectionName) {\n        var _this5 = this;\n\n        var useCache,\n            _args5 = arguments;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                useCache = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : true;\n                _context5.next = 3;\n                return this.fetch_single_row('collections', this.api.contract, collectionName, function (data) {\n                  return useCache || typeof data !== 'undefined' ? _this5.api.cache.getCollection(collectionName, data) : null;\n                });\n\n              case 3:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function fetchCollection(_x8) {\n        return _fetchCollection.apply(this, arguments);\n      }\n\n      return fetchCollection;\n    }()\n  }, {\n    key: \"fetchCollectionSchemas\",\n    value: function () {\n      var _fetchCollectionSchemas = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(collectionName) {\n        var _this6 = this;\n\n        var rows;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.fetch_all_rows('schemas', collectionName, 'schema_name');\n\n              case 2:\n                rows = _context6.sent;\n                return _context6.abrupt(\"return\", rows.map(function (schema) {\n                  return _this6.api.cache.getSchema(collectionName, schema.schema_name, schema);\n                }));\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function fetchCollectionSchemas(_x9) {\n        return _fetchCollectionSchemas.apply(this, arguments);\n      }\n\n      return fetchCollectionSchemas;\n    }()\n  }, {\n    key: \"fetchCollectionTemplates\",\n    value: function () {\n      var _fetchCollectionTemplates = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(collectionName) {\n        var _this7 = this;\n\n        var rows;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.fetch_all_rows('templates', collectionName, 'template_id');\n\n              case 2:\n                rows = _context7.sent;\n                return _context7.abrupt(\"return\", rows.map(function (template) {\n                  return _this7.api.cache.getTemplate(collectionName, String(template.template_id), template);\n                }));\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function fetchCollectionTemplates(_x10) {\n        return _fetchCollectionTemplates.apply(this, arguments);\n      }\n\n      return fetchCollectionTemplates;\n    }()\n  }, {\n    key: \"preloadCollection\",\n    value: function () {\n      var _preloadCollection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(collectionName) {\n        var useCache,\n            _args8 = arguments;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                useCache = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : true;\n\n                if (!(!useCache || !this.preloadedCollections[collectionName] || this.preloadedCollections[collectionName] + 15 * 60 * 1000 < Date.now())) {\n                  _context8.next = 6;\n                  break;\n                }\n\n                _context8.next = 4;\n                return this.fetchCollectionSchemas(collectionName);\n\n              case 4:\n                _context8.next = 6;\n                return this.fetchCollectionTemplates(collectionName);\n\n              case 6:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function preloadCollection(_x11) {\n        return _preloadCollection.apply(this, arguments);\n      }\n\n      return preloadCollection;\n    }()\n  }, {\n    key: \"fetchOffer\",\n    value: function () {\n      var _fetchOffer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(offerID) {\n        var _this8 = this;\n\n        var useCache,\n            _args9 = arguments;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                useCache = _args9.length > 1 && _args9[1] !== undefined ? _args9[1] : true;\n                _context9.next = 3;\n                return this.fetch_single_row('offers', this.api.contract, offerID, function (data) {\n                  return useCache || typeof data !== 'undefined' ? _this8.api.cache.getOffer(offerID, data) : null;\n                });\n\n              case 3:\n                return _context9.abrupt(\"return\", _context9.sent);\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function fetchOffer(_x12) {\n        return _fetchOffer.apply(this, arguments);\n      }\n\n      return fetchOffer;\n    }()\n  }, {\n    key: \"fetchAccountOffers\",\n    value: function () {\n      var _fetchAccountOffers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(account) {\n        var _this9 = this;\n\n        var rows, offers;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return Promise.all([this.fetch_all_rows('offers', this.api.contract, 'offer_sender', account, account, 2, 'name'), this.fetch_all_rows('offers', this.api.contract, 'offer_recipient', account, account, 3, 'name')]);\n\n              case 2:\n                rows = _context10.sent;\n                offers = rows[0].concat(rows[1]);\n                return _context10.abrupt(\"return\", offers.map(function (offer) {\n                  return _this9.api.cache.getOffer(offer.offer_id, offer);\n                }));\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function fetchAccountOffers(_x13) {\n        return _fetchAccountOffers.apply(this, arguments);\n      }\n\n      return fetchAccountOffers;\n    }()\n  }, {\n    key: \"dequeue\",\n    value: function dequeue() {\n      var _this10 = this;\n\n      if (this.interval) {\n        return;\n      }\n\n      this.interval = setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                if (_this10.elements.length > 0) {\n                  _this10.elements.shift()();\n                } else {\n                  clearInterval(_this10.interval);\n                  _this10.interval = null;\n                }\n\n              case 1:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      })), Math.ceil(1000 / this.requestLimit));\n    }\n  }, {\n    key: \"fetch_single_row\",\n    value: function () {\n      var _fetch_single_row = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(table, scope, match, cacheFn) {\n        var _this11 = this;\n\n        var indexPosition,\n            keyType,\n            _args13 = arguments;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                indexPosition = _args13.length > 4 && _args13[4] !== undefined ? _args13[4] : 1;\n                keyType = _args13.length > 5 && _args13[5] !== undefined ? _args13[5] : '';\n                return _context13.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var data = cacheFn();\n\n                  if (data !== null) {\n                    return resolve(data);\n                  }\n\n                  _this11.elements.push( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n                    var options, resp;\n                    return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n                      while (1) {\n                        switch (_context12.prev = _context12.next) {\n                          case 0:\n                            data = cacheFn();\n\n                            if (!(data !== null)) {\n                              _context12.next = 3;\n                              break;\n                            }\n\n                            return _context12.abrupt(\"return\", resolve(data));\n\n                          case 3:\n                            _context12.prev = 3;\n                            options = {\n                              code: _this11.api.contract,\n                              table: table,\n                              scope: scope,\n                              limit: 1,\n                              lower_bound: match,\n                              upper_bound: match,\n                              index_position: indexPosition,\n                              key_type: keyType\n                            };\n                            _context12.next = 7;\n                            return _this11.api.getTableRows(options);\n\n                          case 7:\n                            resp = _context12.sent;\n\n                            if (!(resp.rows.length === 0)) {\n                              _context12.next = 10;\n                              break;\n                            }\n\n                            return _context12.abrupt(\"return\", reject(new Error('Row not found for ' + JSON.stringify(options))));\n\n                          case 10:\n                            return _context12.abrupt(\"return\", resolve(cacheFn(resp.rows[0])));\n\n                          case 13:\n                            _context12.prev = 13;\n                            _context12.t0 = _context12[\"catch\"](3);\n                            return _context12.abrupt(\"return\", reject(_context12.t0));\n\n                          case 16:\n                          case \"end\":\n                            return _context12.stop();\n                        }\n                      }\n                    }, _callee12, null, [[3, 13]]);\n                  })));\n\n                  _this11.dequeue();\n                }));\n\n              case 3:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }));\n\n      function fetch_single_row(_x14, _x15, _x16, _x17) {\n        return _fetch_single_row.apply(this, arguments);\n      }\n\n      return fetch_single_row;\n    }()\n  }, {\n    key: \"fetch_all_rows\",\n    value: function () {\n      var _fetch_all_rows = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(table, scope, tableKey) {\n        var _this12 = this;\n\n        var lowerBound,\n            upperBound,\n            indexPosition,\n            keyType,\n            _args17 = arguments;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                lowerBound = _args17.length > 3 && _args17[3] !== undefined ? _args17[3] : '';\n                upperBound = _args17.length > 4 && _args17[4] !== undefined ? _args17[4] : '';\n                indexPosition = _args17.length > 5 && _args17[5] !== undefined ? _args17[5] : 1;\n                keyType = _args17.length > 6 && _args17[6] !== undefined ? _args17[6] : '';\n                return _context17.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(resolve, reject) {\n                    return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n                      while (1) {\n                        switch (_context16.prev = _context16.next) {\n                          case 0:\n                            _this12.elements.push( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n                              var resp;\n                              return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n                                while (1) {\n                                  switch (_context15.prev = _context15.next) {\n                                    case 0:\n                                      _context15.next = 2;\n                                      return _this12.api.getTableRows({\n                                        code: _this12.api.contract,\n                                        scope: scope,\n                                        table: table,\n                                        lower_bound: lowerBound,\n                                        upper_bound: upperBound,\n                                        limit: 1000,\n                                        index_position: indexPosition,\n                                        key_type: keyType\n                                      });\n\n                                    case 2:\n                                      resp = _context15.sent;\n\n                                      if (resp.more && indexPosition === 1) {\n                                        _this12.elements.unshift( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n                                          var next;\n                                          return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n                                            while (1) {\n                                              switch (_context14.prev = _context14.next) {\n                                                case 0:\n                                                  _context14.prev = 0;\n                                                  _context14.next = 3;\n                                                  return _this12.fetch_all_rows(table, scope, tableKey, resp.rows[resp.rows.length - 1][tableKey], upperBound, indexPosition, keyType);\n\n                                                case 3:\n                                                  next = _context14.sent;\n\n                                                  if (next.length > 0) {\n                                                    next.shift();\n                                                  }\n\n                                                  resolve(resp.rows.concat(next));\n                                                  _context14.next = 11;\n                                                  break;\n\n                                                case 8:\n                                                  _context14.prev = 8;\n                                                  _context14.t0 = _context14[\"catch\"](0);\n                                                  reject(_context14.t0);\n\n                                                case 11:\n                                                case \"end\":\n                                                  return _context14.stop();\n                                              }\n                                            }\n                                          }, _callee14, null, [[0, 8]]);\n                                        })));\n\n                                        _this12.dequeue();\n                                      } else {\n                                        resolve(resp.rows);\n                                      }\n\n                                    case 4:\n                                    case \"end\":\n                                      return _context15.stop();\n                                  }\n                                }\n                              }, _callee15);\n                            })));\n\n                            _this12.dequeue();\n\n                          case 2:\n                          case \"end\":\n                            return _context16.stop();\n                        }\n                      }\n                    }, _callee16);\n                  }));\n\n                  return function (_x21, _x22) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }()));\n\n              case 5:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17);\n      }));\n\n      function fetch_all_rows(_x18, _x19, _x20) {\n        return _fetch_all_rows.apply(this, arguments);\n      }\n\n      return fetch_all_rows;\n    }()\n  }]);\n\n  return RpcQueue;\n}();\n\nexports.default = RpcQueue;","map":{"version":3,"sources":["/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/atomicassets/build/API/Rpc/Queue.js"],"names":["Object","defineProperty","exports","value","RpcQueue","api","requestLimit","elements","interval","preloadedCollections","owner","assetID","useCache","fetch_single_row","data","cache","getAsset","account","fetch_all_rows","rows","map","asset","asset_id","collectionName","templateID","getTemplate","schemaName","getSchema","contract","getCollection","schema","schema_name","template","String","template_id","Date","now","fetchCollectionSchemas","fetchCollectionTemplates","offerID","getOffer","Promise","all","offers","concat","offer","offer_id","setInterval","length","shift","clearInterval","Math","ceil","table","scope","match","cacheFn","indexPosition","keyType","resolve","reject","push","options","code","limit","lower_bound","upper_bound","index_position","key_type","getTableRows","resp","Error","JSON","stringify","dequeue","tableKey","lowerBound","upperBound","more","unshift","next","default"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass RpcQueue {\n    constructor(api, requestLimit = 4) {\n        this.api = api;\n        this.requestLimit = requestLimit;\n        this.elements = [];\n        this.interval = null;\n        this.preloadedCollections = {};\n    }\n    async fetchAsset(owner, assetID, useCache = true) {\n        return await this.fetch_single_row('assets', owner, assetID, (data) => {\n            return (useCache || typeof data !== 'undefined') ? this.api.cache.getAsset(assetID, data) : null;\n        });\n    }\n    async fetchAccountAssets(account) {\n        const rows = await this.fetch_all_rows('assets', account, 'asset_id');\n        return rows.map((asset) => {\n            return this.api.cache.getAsset(asset.asset_id, asset);\n        });\n    }\n    async fetchTemplate(collectionName, templateID, useCache = true) {\n        return await this.fetch_single_row('templates', collectionName, templateID, (data) => {\n            return (useCache || typeof data !== 'undefined') ? this.api.cache.getTemplate(collectionName, templateID, data) : null;\n        });\n    }\n    async fetchSchema(collectionName, schemaName, useCache = true) {\n        return await this.fetch_single_row('schemas', collectionName, schemaName, (data) => {\n            return (useCache || typeof data !== 'undefined') ? this.api.cache.getSchema(collectionName, schemaName, data) : null;\n        });\n    }\n    async fetchCollection(collectionName, useCache = true) {\n        return await this.fetch_single_row('collections', this.api.contract, collectionName, (data) => {\n            return (useCache || typeof data !== 'undefined') ? this.api.cache.getCollection(collectionName, data) : null;\n        });\n    }\n    async fetchCollectionSchemas(collectionName) {\n        const rows = await this.fetch_all_rows('schemas', collectionName, 'schema_name');\n        return rows.map((schema) => {\n            return this.api.cache.getSchema(collectionName, schema.schema_name, schema);\n        });\n    }\n    async fetchCollectionTemplates(collectionName) {\n        const rows = await this.fetch_all_rows('templates', collectionName, 'template_id');\n        return rows.map((template) => {\n            return this.api.cache.getTemplate(collectionName, String(template.template_id), template);\n        });\n    }\n    async preloadCollection(collectionName, useCache = true) {\n        if (!useCache || !this.preloadedCollections[collectionName] || this.preloadedCollections[collectionName] + 15 * 60 * 1000 < Date.now()) {\n            await this.fetchCollectionSchemas(collectionName);\n            await this.fetchCollectionTemplates(collectionName);\n        }\n    }\n    async fetchOffer(offerID, useCache = true) {\n        return await this.fetch_single_row('offers', this.api.contract, offerID, (data) => {\n            return (useCache || typeof data !== 'undefined') ? this.api.cache.getOffer(offerID, data) : null;\n        });\n    }\n    async fetchAccountOffers(account) {\n        const rows = await Promise.all([\n            this.fetch_all_rows('offers', this.api.contract, 'offer_sender', account, account, 2, 'name'),\n            this.fetch_all_rows('offers', this.api.contract, 'offer_recipient', account, account, 3, 'name')\n        ]);\n        const offers = rows[0].concat(rows[1]);\n        return offers.map((offer) => {\n            return this.api.cache.getOffer(offer.offer_id, offer);\n        });\n    }\n    dequeue() {\n        if (this.interval) {\n            return;\n        }\n        this.interval = setInterval(async () => {\n            if (this.elements.length > 0) {\n                this.elements.shift()();\n            }\n            else {\n                clearInterval(this.interval);\n                this.interval = null;\n            }\n        }, Math.ceil(1000 / this.requestLimit));\n    }\n    async fetch_single_row(table, scope, match, cacheFn, indexPosition = 1, keyType = '') {\n        return new Promise((resolve, reject) => {\n            let data = cacheFn();\n            if (data !== null) {\n                return resolve(data);\n            }\n            this.elements.push(async () => {\n                data = cacheFn();\n                if (data !== null) {\n                    return resolve(data);\n                }\n                try {\n                    const options = {\n                        code: this.api.contract, table, scope,\n                        limit: 1, lower_bound: match, upper_bound: match,\n                        index_position: indexPosition, key_type: keyType\n                    };\n                    const resp = await this.api.getTableRows(options);\n                    if (resp.rows.length === 0) {\n                        return reject(new Error('Row not found for ' + JSON.stringify(options)));\n                    }\n                    return resolve(cacheFn(resp.rows[0]));\n                }\n                catch (e) {\n                    return reject(e);\n                }\n            });\n            this.dequeue();\n        });\n    }\n    async fetch_all_rows(table, scope, tableKey, lowerBound = '', upperBound = '', indexPosition = 1, keyType = '') {\n        return new Promise(async (resolve, reject) => {\n            this.elements.push(async () => {\n                const resp = await this.api.getTableRows({\n                    code: this.api.contract, scope, table,\n                    lower_bound: lowerBound, upper_bound: upperBound, limit: 1000,\n                    index_position: indexPosition, key_type: keyType\n                });\n                if (resp.more && indexPosition === 1) {\n                    this.elements.unshift(async () => {\n                        try {\n                            const next = await this.fetch_all_rows(table, scope, tableKey, resp.rows[resp.rows.length - 1][tableKey], upperBound, indexPosition, keyType);\n                            if (next.length > 0) {\n                                next.shift();\n                            }\n                            resolve(resp.rows.concat(next));\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    this.dequeue();\n                }\n                else {\n                    resolve(resp.rows);\n                }\n            });\n            this.dequeue();\n        });\n    }\n}\nexports.default = RpcQueue;\n"]},"metadata":{},"sourceType":"script"}