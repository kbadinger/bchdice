{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst Generator_1 = require(\"./Generator\");\n/* tslint:disable:variable-name */\n\n\nclass ExplorerActionGenerator extends Generator_1.ActionGenerator {\n  constructor(contract, api) {\n    super(contract);\n    this.api = api;\n    this.config = api.getConfig();\n  }\n\n  async createcol(authorization, author, collection_name, allow_notify, authorized_accounts, notify_accounts, market_fee, data) {\n    return super.createcol(authorization, author, collection_name, allow_notify, authorized_accounts, notify_accounts, market_fee, Generator_1.toAttributeMap(data, (await this.config).collection_format));\n  }\n\n  async createtempl(authorization, authorized_creator, collection_name, schema_name, transferable, burnable, max_supply, immutable_data) {\n    const schema = await this.api.getSchema(collection_name, schema_name);\n    const immutable_attribute_map = Generator_1.toAttributeMap(immutable_data, schema.format);\n    return super.createtempl(authorization, authorized_creator, collection_name, schema_name, transferable, burnable, max_supply, immutable_attribute_map);\n  }\n\n  async mintasset(authorization, authorized_minter, collection_name, schema_name, template_id, new_owner, immutable_data, mutable_data, tokens_to_back) {\n    const schema = await this.api.getSchema(collection_name, schema_name);\n    const immutable_attribute_map = Generator_1.toAttributeMap(immutable_data, schema.format);\n    const mutable_attribute_map = Generator_1.toAttributeMap(mutable_data, schema.format);\n    return super.mintasset(authorization, authorized_minter, collection_name, schema_name, template_id, new_owner, immutable_attribute_map, mutable_attribute_map, tokens_to_back);\n  }\n\n  async setassetdata(authorization, authorized_editor, owner, asset_id, mutable_data) {\n    const asset = await this.api.getAsset(asset_id);\n    const mutable_attribute_map = Generator_1.toAttributeMap(mutable_data, asset.schema.format);\n    return super.setassetdata(authorization, authorized_editor, owner, asset_id, mutable_attribute_map);\n  }\n\n  async setcoldata(authorization, collection_name, data) {\n    const mdata = Generator_1.toAttributeMap(data, (await this.config).collection_format);\n    return super.setcoldata(authorization, collection_name, mdata);\n  }\n\n}\n\nexports.default = ExplorerActionGenerator;","map":{"version":3,"sources":["/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/atomicassets/build/Actions/Explorer.js"],"names":["Object","defineProperty","exports","value","Generator_1","require","ExplorerActionGenerator","ActionGenerator","constructor","contract","api","config","getConfig","createcol","authorization","author","collection_name","allow_notify","authorized_accounts","notify_accounts","market_fee","data","toAttributeMap","collection_format","createtempl","authorized_creator","schema_name","transferable","burnable","max_supply","immutable_data","schema","getSchema","immutable_attribute_map","format","mintasset","authorized_minter","template_id","new_owner","mutable_data","tokens_to_back","mutable_attribute_map","setassetdata","authorized_editor","owner","asset_id","asset","getAsset","setcoldata","mdata","default"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Generator_1 = require(\"./Generator\");\n/* tslint:disable:variable-name */\nclass ExplorerActionGenerator extends Generator_1.ActionGenerator {\n    constructor(contract, api) {\n        super(contract);\n        this.api = api;\n        this.config = api.getConfig();\n    }\n    async createcol(authorization, author, collection_name, allow_notify, authorized_accounts, notify_accounts, market_fee, data) {\n        return super.createcol(authorization, author, collection_name, allow_notify, authorized_accounts, notify_accounts, market_fee, Generator_1.toAttributeMap(data, (await this.config).collection_format));\n    }\n    async createtempl(authorization, authorized_creator, collection_name, schema_name, transferable, burnable, max_supply, immutable_data) {\n        const schema = await this.api.getSchema(collection_name, schema_name);\n        const immutable_attribute_map = Generator_1.toAttributeMap(immutable_data, schema.format);\n        return super.createtempl(authorization, authorized_creator, collection_name, schema_name, transferable, burnable, max_supply, immutable_attribute_map);\n    }\n    async mintasset(authorization, authorized_minter, collection_name, schema_name, template_id, new_owner, immutable_data, mutable_data, tokens_to_back) {\n        const schema = await this.api.getSchema(collection_name, schema_name);\n        const immutable_attribute_map = Generator_1.toAttributeMap(immutable_data, schema.format);\n        const mutable_attribute_map = Generator_1.toAttributeMap(mutable_data, schema.format);\n        return super.mintasset(authorization, authorized_minter, collection_name, schema_name, template_id, new_owner, immutable_attribute_map, mutable_attribute_map, tokens_to_back);\n    }\n    async setassetdata(authorization, authorized_editor, owner, asset_id, mutable_data) {\n        const asset = await this.api.getAsset(asset_id);\n        const mutable_attribute_map = Generator_1.toAttributeMap(mutable_data, asset.schema.format);\n        return super.setassetdata(authorization, authorized_editor, owner, asset_id, mutable_attribute_map);\n    }\n    async setcoldata(authorization, collection_name, data) {\n        const mdata = Generator_1.toAttributeMap(data, (await this.config).collection_format);\n        return super.setcoldata(authorization, collection_name, mdata);\n    }\n}\nexports.default = ExplorerActionGenerator;\n"]},"metadata":{},"sourceType":"script"}