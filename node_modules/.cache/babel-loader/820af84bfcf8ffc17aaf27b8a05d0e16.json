{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Serialization_1 = require(\"../../Serialization\");\n\nvar Schema_1 = __importDefault(require(\"./Schema\"));\n\nvar RpcTemplate = /*#__PURE__*/function () {\n  function RpcTemplate(api, collection, id, data, schema) {\n    var _this = this;\n\n    var cache = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n\n    _classCallCheck(this, RpcTemplate);\n\n    this.api = api;\n    this.collection = collection;\n    this.id = id;\n    this._data = new Promise( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve, reject) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!data) {\n                  _context.next = 4;\n                  break;\n                }\n\n                resolve(data);\n                _context.next = 15;\n                break;\n\n              case 4:\n                _context.prev = 4;\n                _context.t0 = resolve;\n                _context.next = 8;\n                return api.queue.fetchTemplate(collection, id, cache);\n\n              case 8:\n                _context.t1 = _context.sent;\n                (0, _context.t0)(_context.t1);\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t2 = _context[\"catch\"](4);\n                reject(_context.t2);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[4, 12]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    this._schema = new Promise( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(resolve, reject) {\n        var row;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!schema) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                resolve(schema);\n                _context2.next = 14;\n                break;\n\n              case 4:\n                _context2.prev = 4;\n                _context2.next = 7;\n                return _this._data;\n\n              case 7:\n                row = _context2.sent;\n                resolve(new Schema_1.default(_this.api, collection, row.schema_name, undefined, cache));\n                _context2.next = 14;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](4);\n                reject(_context2.t0);\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[4, 11]]);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  }\n\n  _createClass(RpcTemplate, [{\n    key: \"schema\",\n    value: function () {\n      var _schema = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this._schema;\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function schema() {\n        return _schema.apply(this, arguments);\n      }\n\n      return schema;\n    }()\n  }, {\n    key: \"immutableData\",\n    value: function () {\n      var _immutableData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var schema;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this._schema;\n\n              case 2:\n                schema = _context4.sent;\n                _context4.t0 = Serialization_1;\n                _context4.next = 6;\n                return this._data;\n\n              case 6:\n                _context4.t1 = _context4.sent.immutable_serialized_data;\n                _context4.next = 9;\n                return schema.format();\n\n              case 9:\n                _context4.t2 = _context4.sent;\n                return _context4.abrupt(\"return\", _context4.t0.deserialize.call(_context4.t0, _context4.t1, _context4.t2));\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function immutableData() {\n        return _immutableData.apply(this, arguments);\n      }\n\n      return immutableData;\n    }()\n  }, {\n    key: \"isTransferable\",\n    value: function () {\n      var _isTransferable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this._data;\n\n              case 2:\n                return _context5.abrupt(\"return\", _context5.sent.transferable);\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function isTransferable() {\n        return _isTransferable.apply(this, arguments);\n      }\n\n      return isTransferable;\n    }()\n  }, {\n    key: \"isBurnable\",\n    value: function () {\n      var _isBurnable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this._data;\n\n              case 2:\n                return _context6.abrupt(\"return\", _context6.sent.burnable);\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function isBurnable() {\n        return _isBurnable.apply(this, arguments);\n      }\n\n      return isBurnable;\n    }()\n  }, {\n    key: \"maxSupply\",\n    value: function () {\n      var _maxSupply = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this._data;\n\n              case 2:\n                return _context7.abrupt(\"return\", _context7.sent.max_supply);\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function maxSupply() {\n        return _maxSupply.apply(this, arguments);\n      }\n\n      return maxSupply;\n    }()\n  }, {\n    key: \"circulation\",\n    value: function () {\n      var _circulation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this._data;\n\n              case 2:\n                return _context8.abrupt(\"return\", _context8.sent.issued_supply);\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function circulation() {\n        return _circulation.apply(this, arguments);\n      }\n\n      return circulation;\n    }()\n  }, {\n    key: \"toObject\",\n    value: function () {\n      var _toObject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.t0 = this.collection;\n                _context9.t1 = this.id;\n                _context9.next = 4;\n                return this.schema();\n\n              case 4:\n                _context9.next = 6;\n                return _context9.sent.toObject();\n\n              case 6:\n                _context9.t2 = _context9.sent;\n                _context9.next = 9;\n                return this.immutableData();\n\n              case 9:\n                _context9.t3 = _context9.sent;\n                _context9.next = 12;\n                return this.isTransferable();\n\n              case 12:\n                _context9.t4 = _context9.sent;\n                _context9.next = 15;\n                return this.isBurnable();\n\n              case 15:\n                _context9.t5 = _context9.sent;\n                _context9.next = 18;\n                return this.maxSupply();\n\n              case 18:\n                _context9.t6 = _context9.sent;\n                _context9.next = 21;\n                return this.circulation();\n\n              case 21:\n                _context9.t7 = _context9.sent;\n                return _context9.abrupt(\"return\", {\n                  collection_name: _context9.t0,\n                  template_id: _context9.t1,\n                  schema: _context9.t2,\n                  immutableData: _context9.t3,\n                  transferable: _context9.t4,\n                  burnable: _context9.t5,\n                  maxSupply: _context9.t6,\n                  circulation: _context9.t7\n                });\n\n              case 23:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function toObject() {\n        return _toObject.apply(this, arguments);\n      }\n\n      return toObject;\n    }()\n  }]);\n\n  return RpcTemplate;\n}();\n\nexports.default = RpcTemplate;","map":{"version":3,"sources":["/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/atomicassets/build/API/Rpc/Template.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Serialization_1","require","Schema_1","RpcTemplate","api","collection","id","data","schema","cache","_data","Promise","resolve","reject","queue","fetchTemplate","_schema","row","default","schema_name","undefined","immutable_serialized_data","format","deserialize","transferable","burnable","max_supply","issued_supply","toObject","immutableData","isTransferable","isBurnable","maxSupply","circulation","collection_name","template_id"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Serialization_1 = require(\"../../Serialization\");\nconst Schema_1 = __importDefault(require(\"./Schema\"));\nclass RpcTemplate {\n    constructor(api, collection, id, data, schema, cache = true) {\n        this.api = api;\n        this.collection = collection;\n        this.id = id;\n        this._data = new Promise(async (resolve, reject) => {\n            if (data) {\n                resolve(data);\n            }\n            else {\n                try {\n                    resolve(await api.queue.fetchTemplate(collection, id, cache));\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n        });\n        this._schema = new Promise(async (resolve, reject) => {\n            if (schema) {\n                resolve(schema);\n            }\n            else {\n                try {\n                    const row = await this._data;\n                    resolve(new Schema_1.default(this.api, collection, row.schema_name, undefined, cache));\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n        });\n    }\n    async schema() {\n        return await this._schema;\n    }\n    async immutableData() {\n        const schema = await this._schema;\n        return Serialization_1.deserialize((await this._data).immutable_serialized_data, await schema.format());\n    }\n    async isTransferable() {\n        return (await this._data).transferable;\n    }\n    async isBurnable() {\n        return (await this._data).burnable;\n    }\n    async maxSupply() {\n        return (await this._data).max_supply;\n    }\n    async circulation() {\n        return (await this._data).issued_supply;\n    }\n    async toObject() {\n        return {\n            collection_name: this.collection,\n            template_id: this.id,\n            schema: await (await this.schema()).toObject(),\n            immutableData: await this.immutableData(),\n            transferable: await this.isTransferable(),\n            burnable: await this.isBurnable(),\n            maxSupply: await this.maxSupply(),\n            circulation: await this.circulation()\n        };\n    }\n}\nexports.default = RpcTemplate;\n"]},"metadata":{},"sourceType":"script"}