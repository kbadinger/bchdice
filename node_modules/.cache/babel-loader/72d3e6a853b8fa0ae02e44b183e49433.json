{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst Rpc_1 = __importDefault(require(\"../../Actions/Rpc\"));\n\nconst RpcError_1 = __importDefault(require(\"../../Errors/RpcError\"));\n\nconst Asset_1 = __importDefault(require(\"./Asset\"));\n\nconst Cache_1 = __importDefault(require(\"./Cache\"));\n\nconst Collection_1 = __importDefault(require(\"./Collection\"));\n\nconst Offer_1 = __importDefault(require(\"./Offer\"));\n\nconst Queue_1 = __importDefault(require(\"./Queue\"));\n\nconst Schema_1 = __importDefault(require(\"./Schema\"));\n\nconst Template_1 = __importDefault(require(\"./Template\"));\n\nclass RpcApi {\n  constructor(endpoint, contract, args = {\n    rateLimit: 4\n  }) {\n    this.endpoint = endpoint;\n    this.contract = contract;\n\n    if (args.fetch) {\n      this.fetchBuiltin = args.fetch;\n    } else {\n      this.fetchBuiltin = global.fetch;\n    }\n\n    this.queue = new Queue_1.default(this, args.rateLimit);\n    this.cache = new Cache_1.default();\n    this.action = new Rpc_1.default(this);\n    this._config = new Promise(async (resolve, reject) => {\n      try {\n        const resp = await this.getTableRows({\n          code: this.contract,\n          scope: this.contract,\n          table: 'config'\n        });\n\n        if (resp.rows.length !== 1) {\n          return reject('invalid config');\n        }\n\n        return resolve(resp.rows[0]);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  async config() {\n    return await this._config;\n  }\n\n  async getAsset(owner, id, cache = true) {\n    if (!cache) {\n      this.cache.deleteAsset(id);\n    }\n\n    const data = await this.queue.fetchAsset(owner, id, cache);\n    return new Asset_1.default(this, owner, id, data, undefined, undefined, undefined, cache);\n  }\n\n  async getTemplate(collectionName, templateID, cache = true) {\n    if (!cache) {\n      this.cache.deleteTemplate(collectionName, templateID);\n    }\n\n    const data = await this.queue.fetchTemplate(collectionName, templateID, cache);\n    return new Template_1.default(this, collectionName, templateID, data, undefined, cache);\n  }\n\n  async getCollection(collectionName, cache = true) {\n    if (!cache) {\n      this.cache.deleteCollection(collectionName);\n    }\n\n    const data = await this.queue.fetchCollection(collectionName, cache);\n    return new Collection_1.default(this, collectionName, data, cache);\n  }\n\n  async getCollectionTemplates(collectionName) {\n    return (await this.queue.fetchCollectionTemplates(collectionName)).map(templateRow => {\n      return new Template_1.default(this, collectionName, String(templateRow.template_id), templateRow, undefined);\n    });\n  }\n\n  async getCollectionsSchemas(collectionName) {\n    return (await this.queue.fetchCollectionSchemas(collectionName)).map(schemaRow => {\n      return new Schema_1.default(this, collectionName, schemaRow.schema_name, undefined);\n    });\n  }\n\n  async getSchema(collectionName, schemaName, cache = true) {\n    if (!cache) {\n      this.cache.deleteSchema(collectionName, schemaName);\n    }\n\n    const data = await this.queue.fetchSchema(collectionName, schemaName, cache);\n    return new Schema_1.default(this, collectionName, schemaName, data, cache);\n  }\n\n  async getOffer(offerID, cache = true) {\n    if (!cache) {\n      this.cache.deleteOffer(offerID);\n    }\n\n    const data = await this.queue.fetchOffer(offerID, cache);\n    return new Offer_1.default(this, offerID, data, undefined, undefined, cache);\n  }\n\n  async getAccountOffers(account) {\n    return (await this.queue.fetchAccountOffers(account)).map(offerRow => {\n      return new Offer_1.default(this, offerRow.offer_id, offerRow, undefined, undefined);\n    });\n  }\n\n  async getAccountAssets(account) {\n    return (await this.queue.fetchAccountAssets(account)).map(assetRow => {\n      return new Asset_1.default(this, account, assetRow.asset_id, assetRow, undefined, undefined, undefined);\n    });\n  }\n\n  async getCollectionInventory(collectionName, account) {\n    await this.queue.preloadCollection(collectionName, true);\n    return (await this.queue.fetchAccountAssets(account)).filter(assetRow => assetRow.collection_name === collectionName).map(assetRow => {\n      return new Asset_1.default(this, account, assetRow.asset_id, assetRow, undefined, undefined, undefined);\n    });\n  }\n\n  async preloadCollection(collectionName, cache = true) {\n    await this.queue.preloadCollection(collectionName, cache);\n  }\n\n  async getTableRows({\n    code,\n    scope,\n    table,\n    table_key = '',\n    lower_bound = '',\n    upper_bound = '',\n    index_position = 1,\n    key_type = ''\n  }) {\n    return await this.fetchRpc('/v1/chain/get_table_rows', {\n      code,\n      scope,\n      table,\n      table_key,\n      lower_bound,\n      upper_bound,\n      index_position,\n      key_type,\n      limit: 101,\n      reverse: false,\n      show_payer: false,\n      json: true\n    });\n  }\n\n  async fetchRpc(path, body) {\n    let response;\n    let json;\n\n    try {\n      const f = this.fetchBuiltin;\n      response = await f(this.endpoint + path, {\n        body: JSON.stringify(body),\n        method: 'POST'\n      });\n      json = await response.json();\n    } catch (e) {\n      e.isFetchError = true;\n      throw e;\n    }\n\n    if (json.processed && json.processed.except || !response.ok) {\n      throw new RpcError_1.default(json);\n    }\n\n    return json;\n  }\n\n}\n\nexports.default = RpcApi;","map":{"version":3,"sources":["/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/atomicassets/build/API/Rpc/index.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Rpc_1","require","RpcError_1","Asset_1","Cache_1","Collection_1","Offer_1","Queue_1","Schema_1","Template_1","RpcApi","constructor","endpoint","contract","args","rateLimit","fetch","fetchBuiltin","global","queue","default","cache","action","_config","Promise","resolve","reject","resp","getTableRows","code","scope","table","rows","length","e","config","getAsset","owner","id","deleteAsset","data","fetchAsset","undefined","getTemplate","collectionName","templateID","deleteTemplate","fetchTemplate","getCollection","deleteCollection","fetchCollection","getCollectionTemplates","fetchCollectionTemplates","map","templateRow","String","template_id","getCollectionsSchemas","fetchCollectionSchemas","schemaRow","schema_name","getSchema","schemaName","deleteSchema","fetchSchema","getOffer","offerID","deleteOffer","fetchOffer","getAccountOffers","account","fetchAccountOffers","offerRow","offer_id","getAccountAssets","fetchAccountAssets","assetRow","asset_id","getCollectionInventory","preloadCollection","filter","collection_name","table_key","lower_bound","upper_bound","index_position","key_type","fetchRpc","limit","reverse","show_payer","json","path","body","response","f","JSON","stringify","method","isFetchError","processed","except","ok"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Rpc_1 = __importDefault(require(\"../../Actions/Rpc\"));\nconst RpcError_1 = __importDefault(require(\"../../Errors/RpcError\"));\nconst Asset_1 = __importDefault(require(\"./Asset\"));\nconst Cache_1 = __importDefault(require(\"./Cache\"));\nconst Collection_1 = __importDefault(require(\"./Collection\"));\nconst Offer_1 = __importDefault(require(\"./Offer\"));\nconst Queue_1 = __importDefault(require(\"./Queue\"));\nconst Schema_1 = __importDefault(require(\"./Schema\"));\nconst Template_1 = __importDefault(require(\"./Template\"));\nclass RpcApi {\n    constructor(endpoint, contract, args = { rateLimit: 4 }) {\n        this.endpoint = endpoint;\n        this.contract = contract;\n        if (args.fetch) {\n            this.fetchBuiltin = args.fetch;\n        }\n        else {\n            this.fetchBuiltin = global.fetch;\n        }\n        this.queue = new Queue_1.default(this, args.rateLimit);\n        this.cache = new Cache_1.default();\n        this.action = new Rpc_1.default(this);\n        this._config = new Promise((async (resolve, reject) => {\n            try {\n                const resp = await this.getTableRows({\n                    code: this.contract, scope: this.contract, table: 'config'\n                });\n                if (resp.rows.length !== 1) {\n                    return reject('invalid config');\n                }\n                return resolve(resp.rows[0]);\n            }\n            catch (e) {\n                reject(e);\n            }\n        }));\n    }\n    async config() {\n        return await this._config;\n    }\n    async getAsset(owner, id, cache = true) {\n        if (!cache) {\n            this.cache.deleteAsset(id);\n        }\n        const data = await this.queue.fetchAsset(owner, id, cache);\n        return new Asset_1.default(this, owner, id, data, undefined, undefined, undefined, cache);\n    }\n    async getTemplate(collectionName, templateID, cache = true) {\n        if (!cache) {\n            this.cache.deleteTemplate(collectionName, templateID);\n        }\n        const data = await this.queue.fetchTemplate(collectionName, templateID, cache);\n        return new Template_1.default(this, collectionName, templateID, data, undefined, cache);\n    }\n    async getCollection(collectionName, cache = true) {\n        if (!cache) {\n            this.cache.deleteCollection(collectionName);\n        }\n        const data = await this.queue.fetchCollection(collectionName, cache);\n        return new Collection_1.default(this, collectionName, data, cache);\n    }\n    async getCollectionTemplates(collectionName) {\n        return (await this.queue.fetchCollectionTemplates(collectionName)).map((templateRow) => {\n            return new Template_1.default(this, collectionName, String(templateRow.template_id), templateRow, undefined);\n        });\n    }\n    async getCollectionsSchemas(collectionName) {\n        return (await this.queue.fetchCollectionSchemas(collectionName)).map((schemaRow) => {\n            return new Schema_1.default(this, collectionName, schemaRow.schema_name, undefined);\n        });\n    }\n    async getSchema(collectionName, schemaName, cache = true) {\n        if (!cache) {\n            this.cache.deleteSchema(collectionName, schemaName);\n        }\n        const data = await this.queue.fetchSchema(collectionName, schemaName, cache);\n        return new Schema_1.default(this, collectionName, schemaName, data, cache);\n    }\n    async getOffer(offerID, cache = true) {\n        if (!cache) {\n            this.cache.deleteOffer(offerID);\n        }\n        const data = await this.queue.fetchOffer(offerID, cache);\n        return new Offer_1.default(this, offerID, data, undefined, undefined, cache);\n    }\n    async getAccountOffers(account) {\n        return (await this.queue.fetchAccountOffers(account)).map((offerRow) => {\n            return new Offer_1.default(this, offerRow.offer_id, offerRow, undefined, undefined);\n        });\n    }\n    async getAccountAssets(account) {\n        return (await this.queue.fetchAccountAssets(account)).map((assetRow) => {\n            return new Asset_1.default(this, account, assetRow.asset_id, assetRow, undefined, undefined, undefined);\n        });\n    }\n    async getCollectionInventory(collectionName, account) {\n        await this.queue.preloadCollection(collectionName, true);\n        return (await this.queue.fetchAccountAssets(account))\n            .filter(assetRow => assetRow.collection_name === collectionName)\n            .map((assetRow) => {\n            return new Asset_1.default(this, account, assetRow.asset_id, assetRow, undefined, undefined, undefined);\n        });\n    }\n    async preloadCollection(collectionName, cache = true) {\n        await this.queue.preloadCollection(collectionName, cache);\n    }\n    async getTableRows({ code, scope, table, table_key = '', lower_bound = '', upper_bound = '', index_position = 1, key_type = '' }) {\n        return await this.fetchRpc('/v1/chain/get_table_rows', {\n            code, scope, table, table_key,\n            lower_bound, upper_bound, index_position,\n            key_type, limit: 101, reverse: false, show_payer: false, json: true\n        });\n    }\n    async fetchRpc(path, body) {\n        let response;\n        let json;\n        try {\n            const f = this.fetchBuiltin;\n            response = await f(this.endpoint + path, {\n                body: JSON.stringify(body),\n                method: 'POST'\n            });\n            json = await response.json();\n        }\n        catch (e) {\n            e.isFetchError = true;\n            throw e;\n        }\n        if ((json.processed && json.processed.except) || !response.ok) {\n            throw new RpcError_1.default(json);\n        }\n        return json;\n    }\n}\nexports.default = RpcApi;\n"]},"metadata":{},"sourceType":"script"}