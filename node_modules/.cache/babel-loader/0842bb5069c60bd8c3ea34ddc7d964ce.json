{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst Schema_1 = require(\"../../Schema\");\n\nconst Collection_1 = __importDefault(require(\"./Collection\"));\n\nclass RpcSchema {\n  constructor(api, collection, name, data, cache = true) {\n    this.api = api;\n    this.collection = collection;\n    this.name = name;\n    this._data = new Promise(async (resolve, reject) => {\n      if (data) {\n        resolve(data);\n      } else {\n        try {\n          resolve(await api.queue.fetchSchema(collection, name, cache));\n        } catch (e) {\n          reject(e);\n        }\n      }\n    });\n    this._collection = new Promise(async (resolve, reject) => {\n      try {\n        resolve(new Collection_1.default(api, collection, undefined, cache));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  async format() {\n    return Schema_1.ObjectSchema((await this._data).format);\n  }\n\n  async rawFormat() {\n    return (await this._data).format;\n  }\n\n  async toObject() {\n    return {\n      collection_name: this.collection,\n      schema_name: this.name,\n      format: await this.rawFormat()\n    };\n  }\n\n}\n\nexports.default = RpcSchema;","map":{"version":3,"sources":["/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/atomicassets/build/API/Rpc/Schema.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Schema_1","require","Collection_1","RpcSchema","constructor","api","collection","name","data","cache","_data","Promise","resolve","reject","queue","fetchSchema","e","_collection","default","undefined","format","ObjectSchema","rawFormat","toObject","collection_name","schema_name"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AACA,MAAMC,YAAY,GAAGT,eAAe,CAACQ,OAAO,CAAC,cAAD,CAAR,CAApC;;AACA,MAAME,SAAN,CAAgB;AACZC,EAAAA,WAAW,CAACC,GAAD,EAAMC,UAAN,EAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,KAAK,GAAG,IAAtC,EAA4C;AACnD,SAAKJ,GAAL,GAAWA,GAAX;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKG,KAAL,GAAa,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAChD,UAAIL,IAAJ,EAAU;AACNI,QAAAA,OAAO,CAACJ,IAAD,CAAP;AACH,OAFD,MAGK;AACD,YAAI;AACAI,UAAAA,OAAO,CAAC,MAAMP,GAAG,CAACS,KAAJ,CAAUC,WAAV,CAAsBT,UAAtB,EAAkCC,IAAlC,EAAwCE,KAAxC,CAAP,CAAP;AACH,SAFD,CAGA,OAAOO,CAAP,EAAU;AACNH,UAAAA,MAAM,CAACG,CAAD,CAAN;AACH;AACJ;AACJ,KAZY,CAAb;AAaA,SAAKC,WAAL,GAAmB,IAAIN,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AACtD,UAAI;AACAD,QAAAA,OAAO,CAAC,IAAIV,YAAY,CAACgB,OAAjB,CAAyBb,GAAzB,EAA8BC,UAA9B,EAA0Ca,SAA1C,EAAqDV,KAArD,CAAD,CAAP;AACH,OAFD,CAGA,OAAOO,CAAP,EAAU;AACNH,QAAAA,MAAM,CAACG,CAAD,CAAN;AACH;AACJ,KAPkB,CAAnB;AAQH;;AACW,QAANI,MAAM,GAAG;AACX,WAAOpB,QAAQ,CAACqB,YAAT,CAAsB,CAAC,MAAM,KAAKX,KAAZ,EAAmBU,MAAzC,CAAP;AACH;;AACc,QAATE,SAAS,GAAG;AACd,WAAO,CAAC,MAAM,KAAKZ,KAAZ,EAAmBU,MAA1B;AACH;;AACa,QAARG,QAAQ,GAAG;AACb,WAAO;AACHC,MAAAA,eAAe,EAAE,KAAKlB,UADnB;AAEHmB,MAAAA,WAAW,EAAE,KAAKlB,IAFf;AAGHa,MAAAA,MAAM,EAAE,MAAM,KAAKE,SAAL;AAHX,KAAP;AAKH;;AAvCW;;AAyChBxB,OAAO,CAACoB,OAAR,GAAkBf,SAAlB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Schema_1 = require(\"../../Schema\");\nconst Collection_1 = __importDefault(require(\"./Collection\"));\nclass RpcSchema {\n    constructor(api, collection, name, data, cache = true) {\n        this.api = api;\n        this.collection = collection;\n        this.name = name;\n        this._data = new Promise(async (resolve, reject) => {\n            if (data) {\n                resolve(data);\n            }\n            else {\n                try {\n                    resolve(await api.queue.fetchSchema(collection, name, cache));\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n        });\n        this._collection = new Promise(async (resolve, reject) => {\n            try {\n                resolve(new Collection_1.default(api, collection, undefined, cache));\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    }\n    async format() {\n        return Schema_1.ObjectSchema((await this._data).format);\n    }\n    async rawFormat() {\n        return (await this._data).format;\n    }\n    async toObject() {\n        return {\n            collection_name: this.collection,\n            schema_name: this.name,\n            format: await this.rawFormat()\n        };\n    }\n}\nexports.default = RpcSchema;\n"]},"metadata":{},"sourceType":"script"}