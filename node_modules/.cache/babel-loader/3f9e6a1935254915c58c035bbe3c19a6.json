{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Generator_1 = require(\"./Generator\");\n/* tslint:disable:variable-name */\n\n\nvar ExplorerActionGenerator = /*#__PURE__*/function (_Generator_1$ActionGe) {\n  _inherits(ExplorerActionGenerator, _Generator_1$ActionGe);\n\n  var _super = _createSuper(ExplorerActionGenerator);\n\n  function ExplorerActionGenerator(contract, api) {\n    var _this;\n\n    _classCallCheck(this, ExplorerActionGenerator);\n\n    _this = _super.call(this, contract);\n    _this.api = api;\n    _this.config = api.getConfig();\n    return _this;\n  }\n\n  _createClass(ExplorerActionGenerator, [{\n    key: \"createcol\",\n    value: function () {\n      var _createcol = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authorization, author, collection_name, allow_notify, authorized_accounts, notify_accounts, market_fee, data) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = _get(_getPrototypeOf(ExplorerActionGenerator.prototype), \"createcol\", this);\n                _context.t1 = this;\n                _context.t2 = authorization;\n                _context.t3 = author;\n                _context.t4 = collection_name;\n                _context.t5 = allow_notify;\n                _context.t6 = authorized_accounts;\n                _context.t7 = notify_accounts;\n                _context.t8 = market_fee;\n                _context.t9 = Generator_1;\n                _context.t10 = data;\n                _context.next = 13;\n                return this.config;\n\n              case 13:\n                _context.t11 = _context.sent.collection_format;\n                _context.t12 = _context.t9.toAttributeMap.call(_context.t9, _context.t10, _context.t11);\n                return _context.abrupt(\"return\", _context.t0.call.call(_context.t0, _context.t1, _context.t2, _context.t3, _context.t4, _context.t5, _context.t6, _context.t7, _context.t8, _context.t12));\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createcol(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n        return _createcol.apply(this, arguments);\n      }\n\n      return createcol;\n    }()\n  }, {\n    key: \"createtempl\",\n    value: function () {\n      var _createtempl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(authorization, authorized_creator, collection_name, schema_name, transferable, burnable, max_supply, immutable_data) {\n        var schema, immutable_attribute_map;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.api.getSchema(collection_name, schema_name);\n\n              case 2:\n                schema = _context2.sent;\n                immutable_attribute_map = Generator_1.toAttributeMap(immutable_data, schema.format);\n                return _context2.abrupt(\"return\", _get(_getPrototypeOf(ExplorerActionGenerator.prototype), \"createtempl\", this).call(this, authorization, authorized_creator, collection_name, schema_name, transferable, burnable, max_supply, immutable_attribute_map));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function createtempl(_x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16) {\n        return _createtempl.apply(this, arguments);\n      }\n\n      return createtempl;\n    }()\n  }, {\n    key: \"mintasset\",\n    value: function () {\n      var _mintasset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(authorization, authorized_minter, collection_name, schema_name, template_id, new_owner, immutable_data, mutable_data, tokens_to_back) {\n        var schema, immutable_attribute_map, mutable_attribute_map;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.api.getSchema(collection_name, schema_name);\n\n              case 2:\n                schema = _context3.sent;\n                immutable_attribute_map = Generator_1.toAttributeMap(immutable_data, schema.format);\n                mutable_attribute_map = Generator_1.toAttributeMap(mutable_data, schema.format);\n                return _context3.abrupt(\"return\", _get(_getPrototypeOf(ExplorerActionGenerator.prototype), \"mintasset\", this).call(this, authorization, authorized_minter, collection_name, schema_name, template_id, new_owner, immutable_attribute_map, mutable_attribute_map, tokens_to_back));\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function mintasset(_x17, _x18, _x19, _x20, _x21, _x22, _x23, _x24, _x25) {\n        return _mintasset.apply(this, arguments);\n      }\n\n      return mintasset;\n    }()\n  }, {\n    key: \"setassetdata\",\n    value: function () {\n      var _setassetdata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(authorization, authorized_editor, owner, asset_id, mutable_data) {\n        var asset, mutable_attribute_map;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.api.getAsset(asset_id);\n\n              case 2:\n                asset = _context4.sent;\n                mutable_attribute_map = Generator_1.toAttributeMap(mutable_data, asset.schema.format);\n                return _context4.abrupt(\"return\", _get(_getPrototypeOf(ExplorerActionGenerator.prototype), \"setassetdata\", this).call(this, authorization, authorized_editor, owner, asset_id, mutable_attribute_map));\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function setassetdata(_x26, _x27, _x28, _x29, _x30) {\n        return _setassetdata.apply(this, arguments);\n      }\n\n      return setassetdata;\n    }()\n  }, {\n    key: \"setcoldata\",\n    value: function () {\n      var _setcoldata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(authorization, collection_name, data) {\n        var mdata;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.t0 = Generator_1;\n                _context5.t1 = data;\n                _context5.next = 4;\n                return this.config;\n\n              case 4:\n                _context5.t2 = _context5.sent.collection_format;\n                mdata = _context5.t0.toAttributeMap.call(_context5.t0, _context5.t1, _context5.t2);\n                return _context5.abrupt(\"return\", _get(_getPrototypeOf(ExplorerActionGenerator.prototype), \"setcoldata\", this).call(this, authorization, collection_name, mdata));\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function setcoldata(_x31, _x32, _x33) {\n        return _setcoldata.apply(this, arguments);\n      }\n\n      return setcoldata;\n    }()\n  }]);\n\n  return ExplorerActionGenerator;\n}(Generator_1.ActionGenerator);\n\nexports.default = ExplorerActionGenerator;","map":{"version":3,"sources":["/Users/kevinbadinger/eos/reactdemo/WCWReact/node_modules/atomicassets/build/Actions/Explorer.js"],"names":["Object","defineProperty","exports","value","Generator_1","require","ExplorerActionGenerator","contract","api","config","getConfig","authorization","author","collection_name","allow_notify","authorized_accounts","notify_accounts","market_fee","data","collection_format","toAttributeMap","authorized_creator","schema_name","transferable","burnable","max_supply","immutable_data","getSchema","schema","immutable_attribute_map","format","authorized_minter","template_id","new_owner","mutable_data","tokens_to_back","mutable_attribute_map","authorized_editor","owner","asset_id","getAsset","asset","mdata","ActionGenerator","default"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Generator_1 = require(\"./Generator\");\n/* tslint:disable:variable-name */\nclass ExplorerActionGenerator extends Generator_1.ActionGenerator {\n    constructor(contract, api) {\n        super(contract);\n        this.api = api;\n        this.config = api.getConfig();\n    }\n    async createcol(authorization, author, collection_name, allow_notify, authorized_accounts, notify_accounts, market_fee, data) {\n        return super.createcol(authorization, author, collection_name, allow_notify, authorized_accounts, notify_accounts, market_fee, Generator_1.toAttributeMap(data, (await this.config).collection_format));\n    }\n    async createtempl(authorization, authorized_creator, collection_name, schema_name, transferable, burnable, max_supply, immutable_data) {\n        const schema = await this.api.getSchema(collection_name, schema_name);\n        const immutable_attribute_map = Generator_1.toAttributeMap(immutable_data, schema.format);\n        return super.createtempl(authorization, authorized_creator, collection_name, schema_name, transferable, burnable, max_supply, immutable_attribute_map);\n    }\n    async mintasset(authorization, authorized_minter, collection_name, schema_name, template_id, new_owner, immutable_data, mutable_data, tokens_to_back) {\n        const schema = await this.api.getSchema(collection_name, schema_name);\n        const immutable_attribute_map = Generator_1.toAttributeMap(immutable_data, schema.format);\n        const mutable_attribute_map = Generator_1.toAttributeMap(mutable_data, schema.format);\n        return super.mintasset(authorization, authorized_minter, collection_name, schema_name, template_id, new_owner, immutable_attribute_map, mutable_attribute_map, tokens_to_back);\n    }\n    async setassetdata(authorization, authorized_editor, owner, asset_id, mutable_data) {\n        const asset = await this.api.getAsset(asset_id);\n        const mutable_attribute_map = Generator_1.toAttributeMap(mutable_data, asset.schema.format);\n        return super.setassetdata(authorization, authorized_editor, owner, asset_id, mutable_attribute_map);\n    }\n    async setcoldata(authorization, collection_name, data) {\n        const mdata = Generator_1.toAttributeMap(data, (await this.config).collection_format);\n        return super.setcoldata(authorization, collection_name, mdata);\n    }\n}\nexports.default = ExplorerActionGenerator;\n"]},"metadata":{},"sourceType":"script"}